{"version":3,"sources":["node_modules/browser-pack/_prelude.js","url-tokenizer.js","src/src/UrlTokenizer.js","src/core/parser.js","src/core/scanner.js","src/core/state.js","src/core/tokens/create-token-class.js","src/core/tokens/multi.js","src/core/tokens/text.js","src/tlds.json","src/utils/class.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","SMART_OUT","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","tokenizer","str","parser","run","scanner","defineProperty","value","undefined","_scanner","_parser","./core/parser","./core/scanner","2","start","TOKENS","State","_state","_multi","MULTI_TOKENS","_text","makeState","tokenClass","TokenState","S_START","S_PROTOCOL","S_MAILTO","S_PROTOCOL_SLASH","S_PROTOCOL_SLASH_SLASH","S_DOMAIN","S_DOMAIN_DOT","S_TLD","URL","S_TLD_COLON","S_TLD_PORT","S_URL","S_URL_NON_ACCEPTING","S_URL_OPENBRACE","S_URL_OPENBRACKET","S_URL_OPENANGLEBRACKET","S_URL_OPENPAREN","S_URL_OPENBRACE_Q","S_URL_OPENBRACKET_Q","S_URL_OPENANGLEBRACKET_Q","S_URL_OPENPAREN_Q","S_URL_OPENBRACE_SYMS","S_URL_OPENBRACKET_SYMS","S_URL_OPENANGLEBRACKET_SYMS","S_URL_OPENPAREN_SYMS","S_EMAIL_DOMAIN","S_EMAIL_DOMAIN_DOT","S_EMAIL","EMAIL","S_EMAIL_COLON","S_EMAIL_PORT","S_MAILTO_EMAIL","MAILTOEMAIL","S_MAILTO_EMAIL_NON_ACCEPTING","S_LOCALPART","S_LOCALPART_AT","S_LOCALPART_DOT","S_NL","NL","on","PROTOCOL","MAILTO","SLASH","TLD","DOMAIN","LOCALHOST","NUM","DOT","COLON","qsAccepting","AT","PLUS","POUND","UNDERSCORE","SYM","AMPERSAND","qsNonAccepting","QUERY","PUNCTUATION","CLOSEBRACE","CLOSEBRACKET","CLOSEANGLEBRACKET","CLOSEPAREN","OPENBRACE","OPENBRACKET","OPENANGLEBRACKET","OPENPAREN","localpartAccepting","tokens","len","cursor","multis","textTokens","state","secondState","nextState","multiLength","latestAccepting","sinceAccepts","next","push","accepts","TEXT","MULTI","emit","slice","./state","./tokens/multi","./tokens/text","3","_interopRequireDefault","default","_tlds","_tlds2","NUMBERS","split","ALPHANUM","WHITESPACE","domainStates","CharacterState","S_NUM","S_DOMAIN_HYPHEN","S_WS","WS","newStates","stateify","apply","partialProtocolFileStates","partialProtocolFtpStates","partialProtocolHttpStates","partialProtocolMailtoStates","S_PROTOCOL_FILE","pop","S_PROTOCOL_FTP","S_PROTOCOL_HTTP","S_PROTOCOL_SECURE","S_FULL_PROTOCOL","S_FULL_MAILTO","partialLocalhostStates","_i","defaultTransition","lowerStr","replace","c","toLowerCase","tokenLength","TOKEN","substr","../tlds","4","createStateClass","tClass","j","T","endToken","defaultToken","_class","BaseState","symbol","Array","item","jump","test","inherits","character","charOrRegExp","RegExp","token","arguments","constructor","../utils/class","5","createTokenClass","v","6","isDomainToken","Base","_createTokenClass","MultiToken","type","isLink","toString","result","join","toHref","toObject","protocol","href","hasProtocol","hasSlashSlash","../../utils/class","./create-token-class","./text","7","inheritsToken","props","TextToken","8","9","parent","child","extended","create","p"],"mappings":"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3G,EO19BCyG,MAAAA,EP29BDzG,EO19BCwG,IAAAA,EP29BDxG,EO19BCmH,YAAAA,EP29BDnH,EO19BCsG,UAAAA,EP29BDtG,EO19BC+F,GAAAA,EP29BD/F,EO19BCuG,IAAAA,EP29BDvG,EO19BC4G,KAAAA,EP29BD5G,EO19BC6G,MAAAA,EP29BD7G,EO19BCkH,MAAAA,EP29BDlH,EO19BCiG,SAAAA,EP29BDjG,EO19BCkG,OAAAA,EP29BDlG,EO19BCmG,MAAAA,EP29BDnG,EO19BC8G,WAAAA,EP29BD9G,EO19BC+G,IAAAA,EP29BD/G,EO19BCoG,IAAAA,EP29BDpG,EO19BCgK,GAAAA,EP29BDhK,EO19BCwH,UAAAA,EP29BDxH,EO19BCyH,YAAAA,EP29BDzH,EO19BC0H,iBAAAA,EP29BD1H,EO19BC2H,UAAAA,EP29BD3H,EO19BCoH,WAAAA,EP29BDpH,EO19BCqH,aAAAA,EP29BDrH,EO19BCsH,kBAAAA,EP29BDtH,EO19BCuH,WAAAA,EP29BDvH,EO19BCgH,UAAAA,IP49BEmH,oBAAoB,EAAEC,uBAAuB,IAAIM,GAAG,SAASxN,EAAQjB,EAAOD,GQpqC/EC,EAAAD,SACA,MACA,OACA,MACA,SACA,UACA,KACA,UACA,YACA,aACA,cACA,MACA,SACA,QACA,KACA,OACA,MACA,QACA,KACA,MACA,OACA,KACA,MACA,KACA,SACA,KACA,MACA,WACA,SACA,KACA,UACA,SACA,YACA,SACA,KACA,QACA,YACA,KACA,YACA,UACA,KACA,aACA,MACA,QACA,KACA,YACA,KACA,SACA,QACA,OACA,OACA,OACA,KACA,OACA,aACA,KACA,WACA,KACA,UACA,OACA,QACA,SACA,OACA,QACA,UACA,KACA,KACA,MACA,KACA,QACA,KACA,QACA,OACA,OACA,MACA,YACA,cACA,WACA,WACA,UACA,SACA,KACA,MACA,OACA,MACA,MACA,KACA,KACA,QACA,OACA,UACA,SACA,OACA,MACA,KACA,KACA,KACA,SACA,KACA,QACA,MACA,OACA,OACA,QACA,MACA,MACA,KACA,QACA,cACA,YACA,OACA,KACA,MACA,MACA,KACA,MACA,aACA,KACA,QACA,aACA,MACA,OACA,MACA,OACA,QACA,QACA,SACA,MACA,WACA,KACA,WACA,cACA,WACA,SACA,UACA,WACA,KACA,KACA,WACA,UACA,QACA,WACA,WACA,MACA,OACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,OACA,MACA,OACA,SACA,OACA,iBACA,QACA,WACA,UACA,MACA,UACA,QACA,OACA,SACA,UACA,OACA,UACA,OACA,OACA,SACA,MACA,WACA,MACA,MACA,KACA,KACA,MACA,SACA,MACA,OACA,KACA,MACA,MACA,KACA,KACA,SACA,UACA,QACA,OACA,QACA,QACA,YACA,SACA,SACA,KACA,WACA,SACA,QACA,QACA,OACA,WACA,KACA,KACA,SACA,WACA,QACA,SACA,WACA,WACA,QACA,OACA,UACA,KACA,KACA,KACA,QACA,QACA,SACA,UACA,UACA,MACA,WACA,YACA,UACA,UACA,WACA,SACA,SACA,eACA,aACA,UACA,cACA,UACA,OACA,OACA,UACA,UACA,SACA,UACA,UACA,KACA,SACA,aACA,cACA,UACA,QACA,MACA,UACA,MACA,KACA,aACA,KACA,KACA,KACA,KACA,QACA,OACA,KACA,QACA,MACA,QACA,OACA,SACA,SACA,MACA,OACA,KACA,SACA,QACA,SACA,WACA,OACA,WACA,QACA,WACA,SACA,UACA,OACA,SACA,MACA,WACA,OACA,UACA,SACA,YACA,WACA,KACA,KACA,KACA,MACA,KACA,OACA,MACA,OACA,UACA,WACA,QACA,QACA,SACA,OACA,KACA,QACA,MACA,KACA,QACA,MACA,YACA,KACA,KACA,QACA,SACA,SACA,WACA,cACA,cACA,QACA,YACA,KACA,OACA,KACA,MACA,SACA,KACA,KACA,aACA,MACA,SACA,WACA,WACA,SACA,UACA,UACA,OACA,OACA,YACA,QACA,SACA,MACA,OACA,OACA,UACA,OACA,WACA,UACA,KACA,OACA,QACA,UACA,YACA,YACA,WACA,OACA,UACA,MACA,UACA,KACA,KACA,SACA,UACA,UACA,UACA,WACA,MACA,KACA,KACA,MACA,WACA,OACA,QACA,UACA,QACA,aACA,MACA,KACA,YACA,MACA,UACA,WACA,OACA,YACA,SACA,MACA,KACA,MACA,UACA,SACA,OACA,SACA,KACA,OACA,KACA,MACA,KACA,MACA,OACA,UACA,KACA,KACA,OACA,KACA,KACA,OACA,QACA,QACA,SACA,KACA,QACA,MACA,SACA,QACA,KACA,QACA,OACA,MACA,MACA,KACA,OACA,YACA,OACA,MACA,OACA,SACA,MACA,MACA,MACA,KACA,KACA,KACA,WACA,WACA,SACA,QACA,QACA,QACA,KACA,KACA,KACA,QACA,OACA,QACA,UACA,OACA,KACA,KACA,UACA,UACA,OACA,WACA,SACA,aACA,OACA,WACA,OACA,SACA,SACA,UACA,MACA,KACA,KACA,KACA,SACA,WACA,UACA,YACA,QACA,QACA,QACA,OACA,UACA,UACA,UACA,QACA,MACA,KACA,OACA,KACA,KACA,UACA,MACA,OACA,MACA,MACA,KACA,KACA,MACA,QACA,KACA,KACA,OACA,aACA,KACA,aACA,WACA,OACA,MACA,MACA,YACA,YACA,SACA,MACA,gBACA,cACA,KACA,WACA,KACA,KACA,QACA,KACA,UACA,MACA,WACA,KACA,OACA,MACA,SACA,OACA,MACA,KACA,QACA,UACA,MACA,MACA,KACA,MACA,KACA,OACA,SACA,MACA,MACA,KACA,WACA,OACA,SACA,SACA,OACA,KACA,cACA,iBACA,kBACA,MACA,KACA,KACA,KACA,MACA,MACA,SACA,UACA,OACA,KACA,KACA,QACA,UACA,KACA,MACA,KACA,MACA,OACA,YACA,KACA,KACA,QACA,KACA,KACA,UACA,cACA,QACA,YACA,OACA,YACA,UACA,UACA,MACA,UACA,MACA,SACA,KACA,KACA,MACA,QACA,UACA,QACA,QACA,OACA,KACA,UACA,OACA,OACA,gBACA,YACA,WACA,OACA,UACA,OACA,UACA,QACA,OACA,OACA,SACA,QACA,KACA,OACA,QACA,QACA,QACA,MACA,SACA,QACA,QACA,OACA,KACA,KACA,KACA,MACA,OACA,KACA,QACA,OACA,SACA,KACA,KACA,KACA,SACA,OACA,SACA,SACA,MACA,aACA,QACA,SACA,YACA,UACA,WACA,MACA,KACA,KACA,KACA,MACA,QACA,OACA,YACA,OACA,WACA,MACA,OACA,MACA,KACA,KACA,QACA,YACA,MACA,OACA,KACA,KACA,KACA,MACA,KACA,KACA,OACA,SACA,OACA,MACA,MACA,MACA,SACA,QACA,YACA,SACA,WACA,SACA,cACA,MACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,MACA,OACA,MACA,KACA,SACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,SACA,OACA,SACA,OACA,KACA,KACA,MACA,MACA,UACA,UACA,UACA,MACA,OACA,QACA,KACA,KACA,MACA,MACA,KACA,OACA,QACA,QACA,SACA,KACA,KACA,QACA,SACA,SACA,KACA,KACA,MACA,MACA,MACA,KACA,MACA,KACA,MACA,SACA,UACA,KACA,QACA,MACA,MACA,MACA,SACA,MACA,SACA,SACA,MACA,UACA,UACA,QACA,SACA,MACA,KACA,OACA,eACA,UACA,QACA,OACA,WACA,QACA,QACA,YACA,KACA,MACA,KACA,KACA,KACA,WACA,UACA,QACA,cACA,SACA,SACA,SACA,OACA,SACA,WACA,MACA,MACA,OACA,OACA,QACA,KACA,KACA,QACA,OACA,cACA,WACA,OACA,KACA,KACA,OACA,QACA,OACA,OACA,KACA,QACA,QACA,MACA,OACA,cACA,OACA,QACA,aACA,WACA,aACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,OACA,SACA,QACA,SACA,KACA,OACA,UACA,SACA,UACA,MACA,WACA,cACA,QACA,QACA,SACA,OACA,MACA,OACA,UACA,SACA,SACA,aACA,OACA,aACA,SACA,UACA,UACA,OACA,QACA,MACA,MACA,KACA,SACA,QACA,QACA,OACA,KACA,OACA,KACA,OACA,MACA,KACA,MACA,SACA,KACA,WACA,OACA,SACA,SACA,OACA,QACA,UACA,UACA,kBACA,SACA,MACA,OACA,OACA,MACA,OACA,KACA,MACA,KACA,MACA,MACA,aACA,UACA,eACA,SACA,SACA,UACA,UACA,OACA,OACA,KACA,KACA,OACA,WACA,OACA,SACA,QACA,WACA,QACA,MACA,MACA,OACA,MACA,KACA,KACA,QACA,QACA,OACA,UACA,QACA,OACA,UACA,KACA,UACA,OACA,KACA,KACA,MACA,OACA,MACA,QACA,KACA,KACA,QACA,KACA,OACA,KACA,SACA,SACA,WACA,WACA,OACA,QACA,YACA,OACA,OACA,MACA,QACA,UACA,OACA,gBACA,KACA,MACA,KACA,QACA,OACA,UACA,YACA,UACA,MACA,WACA,YACA,UACA,QACA,SACA,QACA,QACA,KACA,QACA,WACA,SACA,UACA,OACA,UACA,SACA,KACA,SACA,QACA,KACA,KACA,SACA,WACA,UACA,KACA,MACA,SACA,SACA,aACA,QACA,SACA,MACA,OACA,KACA,MACA,KACA,OACA,OACA,aACA,MACA,WACA,aACA,UACA,SACA,KACA,KACA,KACA,MACA,UACA,UACA,UACA,SACA,UACA,OACA,QACA,QACA,KACA,KACA,KACA,KACA,QACA,KACA,KACA,QACA,QACA,QACA,MACA,QACA,UACA,QACA,QACA,OACA,SACA,OACA,KACA,KACA,QACA,UACA,WACA,SACA,YACA,qBACA,QACA,MACA,KACA,OACA,MACA,QACA,QACA,KACA,MACA,KACA,KACA,KACA,MACA,KACA,KACA,SACA,aACA,MACA,MACA,KACA,KACA,KACA,KACA,YACA,OACA,KACA,KACA,QACA,WACA,WACA,eACA,MACA,KACA,KACA,SACA,QACA,SACA,SACA,MACA,MACA,SACA,SACA,QACA,aACA,OACA,aACA,KACA,QACA,aACA,OACA,SACA,OACA,SACA,KACA,SACA,QACA,SACA,OACA,UACA,QACA,UACA,UACA,iBACA,SACA,QACA,UACA,MACA,UACA,OACA,KACA,UACA,OACA,OACA,cACA,MACA,UACA,OACA,MACA,gBACA,OACA,QACA,QACA,KACA,MACA,MACA,OACA,QACA,MACA,SACA,MACA,MACA,SACA,QACA,UACA,SACA,KACA,YACA,OACA,WACA,UACA,KACA,KACA,OACA,OACA,MACA,KACA,OACA,UACA,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,YACA,UACA,MACA,OACA,SACA,OACA,SACA,MACA,OACA,MACA,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,aRwqCM2O,GAAG,SAASzN,EAAQjB,EAAOD,GACjC,YSvzEO,SAASwM,GAASoC,EAAQC,GAAiB,GAAVL,GAAU3B,UAAArL,OAAA,GAAAiB,SAAAoK,UAAA,GAAAA,UAAA,MAC7CiC,EAAW/M,OAAOgN,OAAOH,EAAO5M,UACpC,KAAK,GAAMgN,KAAKR,GACfM,EAASE,GAAKR,EAAMQ,EAIrB,OAFAF,GAAShC,YAAc+B,EACvBA,EAAM7M,UAAY8M,EACXD,ETkzER9M,OAAOQ,eAAevC,EAAS,cAC9BwC,OAAO,IAERxC,ES5zEgBwM,SAAAA,YTy0EL,IAAI","file":"url-tokenizer.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.SMART_OUT = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.scanner = exports.parser = undefined;\nexports.default = tokenizer;\n\nvar _scanner = require('./core/scanner');\n\nvar scanner = _interopRequireWildcard(_scanner);\n\nvar _parser = require('./core/parser');\n\nvar parser = _interopRequireWildcard(_parser);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction tokenizer(str) {\n\treturn parser.run(scanner.run(str));\n};\nexports.parser = parser;\nexports.scanner = scanner;\n\nglobal.tokenizer = tokenizer;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./core/parser\":2,\"./core/scanner\":3}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.start = exports.run = exports.TOKENS = exports.State = undefined;\n\nvar _state = require('./state');\n\nvar _multi = require('./tokens/multi');\n\nvar MULTI_TOKENS = _interopRequireWildcard(_multi);\n\nvar _text = require('./tokens/text');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/Email_address (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main parser\n*/\n\nvar makeState = function makeState(tokenClass) {\n\treturn new _state.TokenState(tokenClass);\n};\n\n// The universal starting state.\nvar S_START = makeState();\n\n// Intermediate states for URLs. Note that domains that begin with a protocol\n// are treated slighly differently from those that don't.\nvar S_PROTOCOL = makeState(); // e.g., 'http:'\nvar S_MAILTO = makeState(); // 'mailto:'\nvar S_PROTOCOL_SLASH = makeState(); // e.g., '/', 'http:/''\nvar S_PROTOCOL_SLASH_SLASH = makeState(); // e.g., '//', 'http://'\nvar S_DOMAIN = makeState(); // parsed string ends with a potential domain name (A)\nvar S_DOMAIN_DOT = makeState(); // (A) domain followed by DOT\nvar S_TLD = makeState(_multi.URL); // (A) Simplest possible URL with no query string\nvar S_TLD_COLON = makeState(); // (A) URL followed by colon (potential port number here)\nvar S_TLD_PORT = makeState(_multi.URL); // TLD followed by a port number\nvar S_URL = makeState(_multi.URL); // Long URL with optional port and maybe query string\nvar S_URL_NON_ACCEPTING = makeState(); // URL followed by some symbols (will not be part of the final URL)\nvar S_URL_OPENBRACE = makeState(); // URL followed by {\nvar S_URL_OPENBRACKET = makeState(); // URL followed by [\nvar S_URL_OPENANGLEBRACKET = makeState(); // URL followed by <\nvar S_URL_OPENPAREN = makeState(); // URL followed by (\nvar S_URL_OPENBRACE_Q = makeState(_multi.URL); // URL followed by { and some symbols that the URL can end it\nvar S_URL_OPENBRACKET_Q = makeState(_multi.URL); // URL followed by [ and some symbols that the URL can end it\nvar S_URL_OPENANGLEBRACKET_Q = makeState(_multi.URL); // URL followed by < and some symbols that the URL can end it\nvar S_URL_OPENPAREN_Q = makeState(_multi.URL); // URL followed by ( and some symbols that the URL can end it\nvar S_URL_OPENBRACE_SYMS = makeState(); // S_URL_OPENBRACE_Q followed by some symbols it cannot end it\nvar S_URL_OPENBRACKET_SYMS = makeState(); // S_URL_OPENBRACKET_Q followed by some symbols it cannot end it\nvar S_URL_OPENANGLEBRACKET_SYMS = makeState(); // S_URL_OPENANGLEBRACKET_Q followed by some symbols it cannot end it\nvar S_URL_OPENPAREN_SYMS = makeState(); // S_URL_OPENPAREN_Q followed by some symbols it cannot end it\nvar S_EMAIL_DOMAIN = makeState(); // parsed string starts with local email info + @ with a potential domain name (C)\nvar S_EMAIL_DOMAIN_DOT = makeState(); // (C) domain followed by DOT\nvar S_EMAIL = makeState(_multi.EMAIL); // (C) Possible email address (could have more topLevelDomainNames)\nvar S_EMAIL_COLON = makeState(); // (C) URL followed by colon (potential port number here)\nvar S_EMAIL_PORT = makeState(_multi.EMAIL); // (C) Email address with a port\nvar S_MAILTO_EMAIL = makeState(_multi.MAILTOEMAIL); // Email that begins with the mailto prefix (D)\nvar S_MAILTO_EMAIL_NON_ACCEPTING = makeState(); // (D) Followed by some non-query string chars\nvar S_LOCALPART = makeState(); // Local part of the email address\nvar S_LOCALPART_AT = makeState(); // Local part of the email address plus @\nvar S_LOCALPART_DOT = makeState(); // Local part of the email address plus '.' (localpart cannot end in .)\nvar S_NL = makeState(_multi.NL); // single new line\n\n// Make path from start to protocol (with '//')\nS_START.on(_text.NL, S_NL).on(_text.PROTOCOL, S_PROTOCOL).on(_text.MAILTO, S_MAILTO).on(_text.SLASH, S_PROTOCOL_SLASH);\n\nS_PROTOCOL.on(_text.SLASH, S_PROTOCOL_SLASH);\nS_PROTOCOL_SLASH.on(_text.SLASH, S_PROTOCOL_SLASH_SLASH);\n\n// The very first potential domain name\nS_START.on(_text.TLD, S_DOMAIN).on(_text.DOMAIN, S_DOMAIN).on(_text.LOCALHOST, S_TLD).on(_text.NUM, S_DOMAIN);\n\n// Force URL for protocol followed by anything sane\nS_PROTOCOL_SLASH_SLASH.on(_text.TLD, S_URL).on(_text.DOMAIN, S_URL).on(_text.NUM, S_URL).on(_text.LOCALHOST, S_URL);\n\n// Account for dots and hyphens\n// hyphens are usually parts of domain names\nS_DOMAIN.on(_text.DOT, S_DOMAIN_DOT);\nS_EMAIL_DOMAIN.on(_text.DOT, S_EMAIL_DOMAIN_DOT);\n\n// Hyphen can jump back to a domain name\n\n// After the first domain and a dot, we can find either a URL or another domain\nS_DOMAIN_DOT.on(_text.TLD, S_TLD).on(_text.DOMAIN, S_DOMAIN).on(_text.NUM, S_DOMAIN).on(_text.LOCALHOST, S_DOMAIN);\n\nS_EMAIL_DOMAIN_DOT.on(_text.TLD, S_EMAIL).on(_text.DOMAIN, S_EMAIL_DOMAIN).on(_text.NUM, S_EMAIL_DOMAIN).on(_text.LOCALHOST, S_EMAIL_DOMAIN);\n\n// S_TLD accepts! But the URL could be longer, try to find a match greedily\n// The `run` function should be able to \"rollback\" to the accepting state\nS_TLD.on(_text.DOT, S_DOMAIN_DOT);\nS_EMAIL.on(_text.DOT, S_EMAIL_DOMAIN_DOT);\n\n// Become real URLs after `SLASH` or `COLON NUM SLASH`\n// Here PSS and non-PSS converge\nS_TLD.on(_text.COLON, S_TLD_COLON).on(_text.SLASH, S_URL);\nS_TLD_COLON.on(_text.NUM, S_TLD_PORT);\nS_TLD_PORT.on(_text.SLASH, S_URL);\nS_EMAIL.on(_text.COLON, S_EMAIL_COLON);\nS_EMAIL_COLON.on(_text.NUM, S_EMAIL_PORT);\n\n// Types of characters the URL can definitely end in\nvar qsAccepting = [_text.DOMAIN, _text.AT, _text.LOCALHOST, _text.NUM, _text.PLUS, _text.POUND, _text.PROTOCOL, _text.SLASH, _text.TLD, _text.UNDERSCORE, _text.SYM, _text.AMPERSAND];\n\n// Types of tokens that can follow a URL and be part of the query string\n// but cannot be the very last characters\n// Characters that cannot appear in the URL at all should be excluded\nvar qsNonAccepting = [_text.COLON, _text.DOT, _text.QUERY, _text.PUNCTUATION, _text.CLOSEBRACE, _text.CLOSEBRACKET, _text.CLOSEANGLEBRACKET, _text.CLOSEPAREN, _text.OPENBRACE, _text.OPENBRACKET, _text.OPENANGLEBRACKET, _text.OPENPAREN];\n\n// These states are responsible primarily for determining whether or not to\n// include the final round bracket.\n\n// URL, followed by an opening bracket\nS_URL.on(_text.OPENBRACE, S_URL_OPENBRACE).on(_text.OPENBRACKET, S_URL_OPENBRACKET).on(_text.OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET).on(_text.OPENPAREN, S_URL_OPENPAREN);\n\n// URL with extra symbols at the end, followed by an opening bracket\nS_URL_NON_ACCEPTING.on(_text.OPENBRACE, S_URL_OPENBRACE).on(_text.OPENBRACKET, S_URL_OPENBRACKET).on(_text.OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET).on(_text.OPENPAREN, S_URL_OPENPAREN);\n\n// Closing bracket component. This character WILL be included in the URL\nS_URL_OPENBRACE.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN.on(_text.CLOSEPAREN, S_URL);\nS_URL_OPENBRACE_Q.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET_Q.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET_Q.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN_Q.on(_text.CLOSEPAREN, S_URL);\nS_URL_OPENBRACE_SYMS.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET_SYMS.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET_SYMS.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN_SYMS.on(_text.CLOSEPAREN, S_URL);\n\n// URL that beings with an opening bracket, followed by a symbols.\n// Note that the final state can still be `S_URL_OPENBRACE_Q` (if the URL only\n// has a single opening bracket for some reason).\nS_URL_OPENBRACE.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);\nS_URL_OPENBRACKET.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);\nS_URL_OPENANGLEBRACKET.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\nS_URL_OPENPAREN.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);\n\n// URL that begins with an opening bracket, followed by some symbols\nS_URL_OPENBRACE_Q.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_Q.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_Q.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_Q.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE_Q.on(qsNonAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_Q.on(qsNonAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_Q.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_Q.on(qsNonAccepting, S_URL_OPENPAREN_Q);\n\nS_URL_OPENBRACE_SYMS.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_SYMS.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_SYMS.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_SYMS.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE_SYMS.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);\nS_URL_OPENBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);\nS_URL_OPENANGLEBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\nS_URL_OPENPAREN_SYMS.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);\n\n// Account for the query string\nS_URL.on(qsAccepting, S_URL);\nS_URL_NON_ACCEPTING.on(qsAccepting, S_URL);\n\nS_URL.on(qsNonAccepting, S_URL_NON_ACCEPTING);\nS_URL_NON_ACCEPTING.on(qsNonAccepting, S_URL_NON_ACCEPTING);\n\n// Email address-specific state definitions\n// Note: We are not allowing '/' in email addresses since this would interfere\n// with real URLs\n\n// For addresses with the mailto prefix\n// 'mailto:' followed by anything sane is a valid email\nS_MAILTO.on(_text.TLD, S_MAILTO_EMAIL).on(_text.DOMAIN, S_MAILTO_EMAIL).on(_text.NUM, S_MAILTO_EMAIL).on(_text.LOCALHOST, S_MAILTO_EMAIL);\n\n// Greedily get more potential valid email values\nS_MAILTO_EMAIL.on(qsAccepting, S_MAILTO_EMAIL).on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\nS_MAILTO_EMAIL_NON_ACCEPTING.on(qsAccepting, S_MAILTO_EMAIL).on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\n\n// For addresses without the mailto prefix\n// Tokens allowed in the localpart of the email\nvar localpartAccepting = [_text.DOMAIN, _text.NUM, _text.PLUS, _text.POUND, _text.QUERY, _text.UNDERSCORE, _text.SYM, _text.AMPERSAND, _text.TLD];\n\n// Some of the tokens in `localpartAccepting` are already accounted for here and\n// will not be overwritten (don't worry)\nS_DOMAIN.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT);\nS_TLD.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT);\nS_DOMAIN_DOT.on(localpartAccepting, S_LOCALPART);\n\n// Okay we're on a localpart. Now what?\n// TODO: IP addresses and what if the email starts with numbers?\nS_LOCALPART.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT) // close to an email address now\n.on(_text.DOT, S_LOCALPART_DOT);\nS_LOCALPART_DOT.on(localpartAccepting, S_LOCALPART);\nS_LOCALPART_AT.on(_text.TLD, S_EMAIL_DOMAIN).on(_text.DOMAIN, S_EMAIL_DOMAIN).on(_text.LOCALHOST, S_EMAIL);\n// States following `@` defined above\n\nvar run = function run(tokens) {\n\tvar len = tokens.length;\n\tvar cursor = 0;\n\tvar multis = [];\n\tvar textTokens = [];\n\n\twhile (cursor < len) {\n\t\tvar state = S_START;\n\t\tvar secondState = null;\n\t\tvar nextState = null;\n\t\tvar multiLength = 0;\n\t\tvar latestAccepting = null;\n\t\tvar sinceAccepts = -1;\n\n\t\twhile (cursor < len && !(secondState = state.next(tokens[cursor]))) {\n\t\t\t// Starting tokens with nowhere to jump to.\n\t\t\t// Consider these to be just plain text\n\t\t\ttextTokens.push(tokens[cursor++]);\n\t\t}\n\n\t\twhile (cursor < len && (nextState = secondState || state.next(tokens[cursor]))) {\n\n\t\t\t// Get the next state\n\t\t\tsecondState = null;\n\t\t\tstate = nextState;\n\n\t\t\t// Keep track of the latest accepting state\n\t\t\tif (state.accepts()) {\n\t\t\t\tsinceAccepts = 0;\n\t\t\t\tlatestAccepting = state;\n\t\t\t} else if (sinceAccepts >= 0) {\n\t\t\t\tsinceAccepts++;\n\t\t\t}\n\n\t\t\tcursor++;\n\t\t\tmultiLength++;\n\t\t}\n\n\t\tif (sinceAccepts < 0) {\n\n\t\t\t// No accepting state was found, part of a regular text token\n\t\t\t// Add all the tokens we looked at to the text tokens array\n\t\t\tfor (var i = cursor - multiLength; i < cursor; i++) {\n\t\t\t\ttextTokens.push(tokens[i]);\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Accepting state!\n\n\t\t\t// First close off the textTokens (if available)\n\t\t\tif (textTokens.length > 0) {\n\t\t\t\tmultis.push(new _multi.TEXT(textTokens));\n\t\t\t\ttextTokens = [];\n\t\t\t}\n\n\t\t\t// Roll back to the latest accepting state\n\t\t\tcursor -= sinceAccepts;\n\t\t\tmultiLength -= sinceAccepts;\n\n\t\t\t// Create a new multitoken\n\t\t\tvar MULTI = latestAccepting.emit();\n\t\t\tmultis.push(new MULTI(tokens.slice(cursor - multiLength, cursor)));\n\t\t}\n\t}\n\n\t// Finally close off the textTokens (if available)\n\tif (textTokens.length > 0) {\n\t\tmultis.push(new _multi.TEXT(textTokens));\n\t}\n\n\treturn multis;\n};\n\nexports.State = _state.TokenState;\nexports.TOKENS = MULTI_TOKENS;\nexports.run = run;\nexports.start = S_START;\n\n},{\"./state\":4,\"./tokens/multi\":6,\"./tokens/text\":7}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.start = exports.run = exports.TOKENS = exports.State = undefined;\n\nvar _state = require('./state');\n\nvar _text = require('./tokens/text');\n\nvar TOKENS = _interopRequireWildcard(_text);\n\nvar _tlds = require('../tlds');\n\nvar _tlds2 = _interopRequireDefault(_tlds);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n\n\t@module linkify\n\t@submodule scanner\n\t@main scanner\n*/\n\nvar NUMBERS = '0123456789'.split('');\nvar ALPHANUM = '0123456789abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя'.split('');\nvar WHITESPACE = [' ', '\\f', '\\r', '\\t', '\\v', '\\xA0', '\\u1680', '\\u180E']; // excluding line breaks\n\nvar domainStates = []; // states that jump to DOMAIN on /[a-z0-9]/\nvar makeState = function makeState(tokenClass) {\n\treturn new _state.CharacterState(tokenClass);\n};\n\n// Frequently used states\nvar S_START = makeState();\nvar S_NUM = makeState(_text.NUM);\nvar S_DOMAIN = makeState(_text.DOMAIN);\nvar S_DOMAIN_HYPHEN = makeState(); // domain followed by 1 or more hyphen characters\nvar S_WS = makeState(_text.WS);\n\n// States for special URL symbols\nS_START.on('@', makeState(_text.AT)).on('.', makeState(_text.DOT)).on('+', makeState(_text.PLUS)).on('#', makeState(_text.POUND)).on('?', makeState(_text.QUERY)).on('/', makeState(_text.SLASH)).on('_', makeState(_text.UNDERSCORE)).on(':', makeState(_text.COLON)).on('{', makeState(_text.OPENBRACE)).on('[', makeState(_text.OPENBRACKET)).on('<', makeState(_text.OPENANGLEBRACKET)).on('(', makeState(_text.OPENPAREN)).on('}', makeState(_text.CLOSEBRACE)).on(']', makeState(_text.CLOSEBRACKET)).on('>', makeState(_text.CLOSEANGLEBRACKET)).on(')', makeState(_text.CLOSEPAREN)).on('&', makeState(_text.AMPERSAND)).on([',', ';', '!', '\"', '\\'', '`', '-'], makeState(_text.PUNCTUATION));\n\n// Whitespace jumps\n// Tokens of only non-newline whitespace are arbitrarily long\nS_START.on('\\n', makeState(_text.NL)).on(WHITESPACE, S_WS);\n\n// If any whitespace except newline, more whitespace!\nS_WS.on(WHITESPACE, S_WS);\n\n// Generates states for top-level domains\n// Note that this is most accurate when topLevelDomainNames are in alphabetical order\nfor (var i = 0; i < _tlds2.default.length; i++) {\n\tvar newStates = (0, _state.stateify)(_tlds2.default[i], S_START, _text.TLD, _text.DOMAIN);\n\tdomainStates.push.apply(domainStates, newStates);\n}\n\n// Collect the states generated by different protocls\nvar partialProtocolFileStates = (0, _state.stateify)('file', S_START, _text.DOMAIN, _text.DOMAIN);\nvar partialProtocolFtpStates = (0, _state.stateify)('ftp', S_START, _text.DOMAIN, _text.DOMAIN);\nvar partialProtocolHttpStates = (0, _state.stateify)('http', S_START, _text.DOMAIN, _text.DOMAIN);\nvar partialProtocolMailtoStates = (0, _state.stateify)('mailto', S_START, _text.DOMAIN, _text.DOMAIN);\n\n// Add the states to the array of DOMAINeric states\ndomainStates.push.apply(domainStates, partialProtocolFileStates);\ndomainStates.push.apply(domainStates, partialProtocolFtpStates);\ndomainStates.push.apply(domainStates, partialProtocolHttpStates);\n\n// Protocol states\nvar S_PROTOCOL_FILE = partialProtocolFileStates.pop();\nvar S_PROTOCOL_FTP = partialProtocolFtpStates.pop();\nvar S_PROTOCOL_HTTP = partialProtocolHttpStates.pop();\nvar S_MAILTO = partialProtocolMailtoStates.pop();\nvar S_PROTOCOL_SECURE = makeState(_text.DOMAIN);\nvar S_FULL_PROTOCOL = makeState(_text.PROTOCOL); // Full protocol ends with COLON\nvar S_FULL_MAILTO = makeState(_text.MAILTO); // Mailto ends with COLON\n\n// Secure protocols (end with 's')\nS_PROTOCOL_FTP.on('s', S_PROTOCOL_SECURE).on(':', S_FULL_PROTOCOL);\n\nS_PROTOCOL_HTTP.on('s', S_PROTOCOL_SECURE).on(':', S_FULL_PROTOCOL);\n\ndomainStates.push(S_PROTOCOL_SECURE);\n\n// Become protocol tokens after a COLON\nS_PROTOCOL_FILE.on(':', S_FULL_PROTOCOL);\nS_PROTOCOL_SECURE.on(':', S_FULL_PROTOCOL);\nS_MAILTO.on(':', S_FULL_MAILTO);\n\n// Localhost\nvar partialLocalhostStates = (0, _state.stateify)('localhost', S_START, _text.LOCALHOST, _text.DOMAIN);\ndomainStates.push.apply(domainStates, partialLocalhostStates);\n\n// Everything else\n// DOMAINs make more DOMAINs\n// Number and character transitions\nS_START.on(NUMBERS, S_NUM);\nS_NUM.on('-', S_DOMAIN_HYPHEN).on(NUMBERS, S_NUM).on(ALPHANUM, S_DOMAIN); // number becomes DOMAIN\n\nS_DOMAIN.on('-', S_DOMAIN_HYPHEN).on(ALPHANUM, S_DOMAIN);\n\n// All the generated states should have a jump to DOMAIN\nfor (var _i = 0; _i < domainStates.length; _i++) {\n\tdomainStates[_i].on('-', S_DOMAIN_HYPHEN).on(ALPHANUM, S_DOMAIN);\n}\n\nS_DOMAIN_HYPHEN.on('-', S_DOMAIN_HYPHEN).on(NUMBERS, S_DOMAIN).on(ALPHANUM, S_DOMAIN);\n\n// Set default transition\nS_START.defaultTransition = makeState(_text.SYM);\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {String} str Input string to scan\n\t@return {Array} Array of TOKEN instances\n*/\nvar run = function run(str) {\n\n\t// The state machine only looks at lowercase strings.\n\t// This selective `toLowerCase` is used because lowercasing the entire\n\t// string causes the length and character position to vary in some in some\n\t// non-English strings. This happens only on V8-based runtimes.\n\tvar lowerStr = str.replace(/[A-ZА-ЯЁ]/g, function (c) {\n\t\treturn c.toLowerCase();\n\t});\n\tvar len = str.length;\n\tvar tokens = []; // return value\n\n\tvar cursor = 0;\n\n\t// Tokenize the string\n\twhile (cursor < len) {\n\t\tvar state = S_START;\n\t\tvar secondState = null;\n\t\tvar nextState = null;\n\t\tvar tokenLength = 0;\n\t\tvar latestAccepting = null;\n\t\tvar sinceAccepts = -1;\n\n\t\twhile (cursor < len && (nextState = state.next(lowerStr[cursor]))) {\n\t\t\tsecondState = null;\n\t\t\tstate = nextState;\n\n\t\t\t// Keep track of the latest accepting state\n\t\t\tif (state.accepts()) {\n\t\t\t\tsinceAccepts = 0;\n\t\t\t\tlatestAccepting = state;\n\t\t\t} else if (sinceAccepts >= 0) {\n\t\t\t\tsinceAccepts++;\n\t\t\t}\n\n\t\t\ttokenLength++;\n\t\t\tcursor++;\n\t\t}\n\n\t\tif (sinceAccepts < 0) {\n\t\t\tcontinue;\n\t\t} // Should never happen\n\n\t\t// Roll back to the latest accepting state\n\t\tcursor -= sinceAccepts;\n\t\ttokenLength -= sinceAccepts;\n\n\t\t// Get the class for the new token\n\t\tvar TOKEN = latestAccepting.emit(); // Current token class\n\n\t\t// No more jumps, just make a new token\n\t\ttokens.push(new TOKEN(str.substr(cursor - tokenLength, tokenLength)));\n\t}\n\n\treturn tokens;\n};\n\nvar start = S_START;\nexports.State = _state.CharacterState;\nexports.TOKENS = TOKENS;\nexports.run = run;\nexports.start = start;\n\n},{\"../tlds\":8,\"./state\":4,\"./tokens/text\":7}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.stateify = exports.TokenState = exports.CharacterState = undefined;\n\nvar _class = require('../utils/class');\n\nfunction createStateClass() {\n\treturn function (tClass) {\n\t\tthis.j = [];\n\t\tthis.T = tClass || null;\n\t};\n}\n\n/**\n\tA simple state machine that can emit token classes\n\n\tThe `j` property in this class refers to state jumps. It's a\n\tmultidimensional array where for each element:\n\n\t* index [0] is a symbol or class of symbols to transition to.\n\t* index [1] is a State instance which matches\n\n\tThe type of symbol will depend on the target implementation for this class.\n\tIn Linkify, we have a two-stage scanner. Each stage uses this state machine\n\tbut with a slighly different (polymorphic) implementation.\n\n\tThe `T` property refers to the token class.\n\n\tTODO: Can the `on` and `next` methods be combined?\n\n\t@class BaseState\n*/\nvar BaseState = createStateClass();\nBaseState.prototype = {\n\tdefaultTransition: false,\n\n\t/**\n \t@method constructor\n \t@param {Class} tClass Pass in the kind of token to emit if there are\n \t\tno jumps after this state and the state is accepting.\n */\n\n\t/**\n \tOn the given symbol(s), this machine should go to the given state\n \t\t@method on\n \t@param {Array|Mixed} symbol\n \t@param {BaseState} state Note that the type of this state should be the\n \t\tsame as the current instance (i.e., don't pass in a different\n \t\tsubclass)\n */\n\ton: function on(symbol, state) {\n\t\tif (symbol instanceof Array) {\n\t\t\tfor (var i = 0; i < symbol.length; i++) {\n\t\t\t\tthis.j.push([symbol[i], state]);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tthis.j.push([symbol, state]);\n\t\treturn this;\n\t},\n\n\n\t/**\n \tGiven the next item, returns next state for that item\n \t@method next\n \t@param {Mixed} item Should be an instance of the symbols handled by\n \t\tthis particular machine.\n \t@return {State} state Returns false if no jumps are available\n */\n\tnext: function next(item) {\n\t\tfor (var i = 0; i < this.j.length; i++) {\n\t\t\tvar jump = this.j[i];\n\t\t\tvar symbol = jump[0]; // Next item to check for\n\t\t\tvar state = jump[1]; // State to jump to if items match\n\n\t\t\t// compare item with symbol\n\t\t\tif (this.test(item, symbol)) {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t}\n\n\t\t// Nowhere left to jump!\n\t\treturn this.defaultTransition;\n\t},\n\n\n\t/**\n \tDoes this state accept?\n \t`true` only of `this.T` exists\n \t\t@method accepts\n \t@return {Boolean}\n */\n\taccepts: function accepts() {\n\t\treturn !!this.T;\n\t},\n\n\n\t/**\n \tDetermine whether a given item \"symbolizes\" the symbol, where symbol is\n \ta class of items handled by this state machine.\n \t\tThis method should be overriden in extended classes.\n \t\t@method test\n \t@param {Mixed} item Does this item match the given symbol?\n \t@param {Mixed} symbol\n \t@return {Boolean}\n */\n\ttest: function test(item, symbol) {\n\t\treturn item === symbol;\n\t},\n\n\n\t/**\n \tEmit the token for this State (just return it in this case)\n \tIf this emits a token, this instance is an accepting state\n \t@method emit\n \t@return {Class} T\n */\n\temit: function emit() {\n\t\treturn this.T;\n\t}\n};\n\n/**\n\tState machine for string-based input\n\n\t@class CharacterState\n\t@extends BaseState\n*/\nvar CharacterState = (0, _class.inherits)(BaseState, createStateClass(), {\n\t/**\n \tDoes the given character match the given character or regular\n \texpression?\n \t\t@method test\n \t@param {String} char\n \t@param {String|RegExp} charOrRegExp\n \t@return {Boolean}\n */\n\ttest: function test(character, charOrRegExp) {\n\t\treturn character === charOrRegExp || charOrRegExp instanceof RegExp && charOrRegExp.test(character);\n\t}\n});\n\n/**\n\tState machine for input in the form of TextTokens\n\n\t@class TokenState\n\t@extends BaseState\n*/\nvar TokenState = (0, _class.inherits)(BaseState, createStateClass(), {\n\n\t/**\n  * Similar to `on`, but returns the state the results in the transition from\n  * the given item\n  * @method jump\n  * @param {Mixed} item\n  * @param {Token} [token]\n  * @return state\n  */\n\tjump: function jump(token) {\n\t\tvar tClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\tvar state = this.next(new token('')); // dummy temp token\n\t\tif (state === this.defaultTransition) {\n\t\t\t// Make a new state!\n\t\t\tstate = new this.constructor(tClass);\n\t\t\tthis.on(token, state);\n\t\t} else if (tClass) {\n\t\t\tstate.T = tClass;\n\t\t}\n\t\treturn state;\n\t},\n\n\n\t/**\n \tIs the given token an instance of the given token class?\n \t\t@method test\n \t@param {TextToken} token\n \t@param {Class} tokenClass\n \t@return {Boolean}\n */\n\ttest: function test(token, tokenClass) {\n\t\treturn token instanceof tokenClass;\n\t}\n});\n\n/**\n\tGiven a non-empty target string, generates states (if required) for each\n\tconsecutive substring of characters in str starting from the beginning of\n\tthe string. The final state will have a special value, as specified in\n\toptions. All other \"in between\" substrings will have a default end state.\n\n\tThis turns the state machine into a Trie-like data structure (rather than a\n\tintelligently-designed DFA).\n\n\tNote that I haven't really tried these with any strings other than\n\tDOMAIN.\n\n\t@param {String} str\n\t@param {CharacterState} start State to jump from the first character\n\t@param {Class} endToken Token class to emit when the given string has been\n\t\tmatched and no more jumps exist.\n\t@param {Class} defaultToken \"Filler token\", or which token type to emit when\n\t\twe don't have a full match\n\t@return {Array} list of newly-created states\n*/\nfunction stateify(str, start, endToken, defaultToken) {\n\tvar i = 0,\n\t    len = str.length,\n\t    state = start,\n\t    newStates = [],\n\t    nextState = void 0;\n\n\t// Find the next state without a jump to the next character\n\twhile (i < len && (nextState = state.next(str[i]))) {\n\t\tstate = nextState;\n\t\ti++;\n\t}\n\n\tif (i >= len) {\n\t\treturn [];\n\t} // no new tokens were added\n\n\twhile (i < len - 1) {\n\t\tnextState = new CharacterState(defaultToken);\n\t\tnewStates.push(nextState);\n\t\tstate.on(str[i], nextState);\n\t\tstate = nextState;\n\t\ti++;\n\t}\n\n\tnextState = new CharacterState(endToken);\n\tnewStates.push(nextState);\n\tstate.on(str[len - 1], nextState);\n\n\treturn newStates;\n}\n\nexports.CharacterState = CharacterState;\nexports.TokenState = TokenState;\nexports.stateify = stateify;\n\n},{\"../utils/class\":9}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nfunction createTokenClass() {\n\treturn function (value) {\n\t\tif (value) {\n\t\t\tthis.v = value;\n\t\t}\n\t};\n}\n\nexports.createTokenClass = createTokenClass;\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.URL = exports.TEXT = exports.NL = exports.EMAIL = exports.MAILTOEMAIL = exports.Base = undefined;\n\nvar _createTokenClass = require('./create-token-class');\n\nvar _class = require('../../utils/class');\n\nvar _text = require('./text');\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n// Is the given token a valid domain token?\n// Should nums be included here?\nfunction isDomainToken(token) {\n\treturn token instanceof _text.DOMAIN || token instanceof _text.TLD;\n}\n\n/**\n\tAbstract class used for manufacturing tokens of text tokens. That is rather\n\tthan the value for a token being a small string of text, it's value an array\n\tof text tokens.\n\n\tUsed for grouping together URLs, emails, hashtags, and other potential\n\tcreations.\n\n\t@class MultiToken\n\t@abstract\n*/\nvar MultiToken = (0, _createTokenClass.createTokenClass)();\n\nMultiToken.prototype = {\n\t/**\n \tString representing the type for this token\n \t@property type\n \t@default 'TOKEN'\n */\n\ttype: 'token',\n\n\t/**\n \tIs this multitoken a link?\n \t@property isLink\n \t@default false\n */\n\tisLink: false,\n\n\t/**\n \tReturn the string this token represents.\n \t@method toString\n \t@return {String}\n */\n\ttoString: function toString() {\n\t\tvar result = [];\n\t\tfor (var i = 0; i < this.v.length; i++) {\n\t\t\tresult.push(this.v[i].toString());\n\t\t}\n\t\treturn result.join('');\n\t},\n\n\n\t/**\n \tWhat should the value for this token be in the `href` HTML attribute?\n \tReturns the `.toString` value by default.\n \t\t@method toHref\n \t@return {String}\n */\n\ttoHref: function toHref() {\n\t\treturn this.toString();\n\t},\n\n\n\t/**\n \tReturns a hash of relevant values for this token, which includes keys\n \t* type - Kind of token ('url', 'email', etc.)\n \t* value - Original text\n \t* href - The value that should be added to the anchor tag's href\n \t\tattribute\n \t\t@method toObject\n \t@param {String} [protocol] `'http'` by default\n \t@return {Object}\n */\n\ttoObject: function toObject() {\n\t\tvar protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http';\n\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\tvalue: this.toString(),\n\t\t\thref: this.toHref(protocol)\n\t\t};\n\t}\n};\n\n/**\n\tRepresents an arbitrarily mailto email address with the prefix included\n\t@class MAILTO\n\t@extends MultiToken\n*/\nvar MAILTOEMAIL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), {\n\ttype: 'email',\n\tisLink: true\n});\n\n/**\n\tRepresents a list of tokens making up a valid email address\n\t@class EMAIL\n\t@extends MultiToken\n*/\nvar EMAIL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), {\n\ttype: 'email',\n\tisLink: true,\n\ttoHref: function toHref() {\n\t\tvar tokens = this.v;\n\t\treturn 'mailto:' + this.toString();\n\t}\n});\n\n/**\n\tRepresents some plain text\n\t@class TEXT\n\t@extends MultiToken\n*/\nvar TEXT = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), { type: 'text' });\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class NL\n\t@extends MultiToken\n*/\nvar NL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), { type: 'nl' });\n\n/**\n\tRepresents a list of tokens making up a valid URL\n\t@class URL\n\t@extends MultiToken\n*/\nvar URL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), {\n\ttype: 'url',\n\tisLink: true,\n\n\t/**\n \tLowercases relevant parts of the domain and adds the protocol if\n \trequired. Note that this will not escape unsafe HTML characters in the\n \tURL.\n \t\t@method href\n \t@param {String} protocol\n \t@return {String}\n */\n\ttoHref: function toHref() {\n\t\tvar protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http';\n\n\t\tvar hasProtocol = false;\n\t\tvar hasSlashSlash = false;\n\t\tvar tokens = this.v;\n\t\tvar result = [];\n\t\tvar i = 0;\n\n\t\t// Make the first part of the domain lowercase\n\t\t// Lowercase protocol\n\t\twhile (tokens[i] instanceof _text.PROTOCOL) {\n\t\t\thasProtocol = true;\n\t\t\tresult.push(tokens[i].toString().toLowerCase());\n\t\t\ti++;\n\t\t}\n\n\t\t// Skip slash-slash\n\t\twhile (tokens[i] instanceof _text.SLASH) {\n\t\t\thasSlashSlash = true;\n\t\t\tresult.push(tokens[i].toString());\n\t\t\ti++;\n\t\t}\n\n\t\t// Lowercase all other characters in the domain\n\t\twhile (isDomainToken(tokens[i])) {\n\t\t\tresult.push(tokens[i].toString().toLowerCase());\n\t\t\ti++;\n\t\t}\n\n\t\t// Leave all other characters as they were written\n\t\tfor (; i < tokens.length; i++) {\n\t\t\tresult.push(tokens[i].toString());\n\t\t}\n\n\t\tresult = result.join('');\n\n\t\tif (!(hasProtocol || hasSlashSlash)) {\n\t\t\tresult = protocol + '://' + result;\n\t\t}\n\n\t\treturn result;\n\t},\n\thasProtocol: function hasProtocol() {\n\t\treturn this.v[0] instanceof _text.PROTOCOL;\n\t}\n});\n\nexports.Base = MultiToken;\nexports.MAILTOEMAIL = MAILTOEMAIL;\nexports.EMAIL = EMAIL;\nexports.NL = NL;\nexports.TEXT = TEXT;\nexports.URL = URL;\n\n},{\"../../utils/class\":9,\"./create-token-class\":5,\"./text\":7}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.AMPERSAND = exports.CLOSEPAREN = exports.CLOSEANGLEBRACKET = exports.CLOSEBRACKET = exports.CLOSEBRACE = exports.OPENPAREN = exports.OPENANGLEBRACKET = exports.OPENBRACKET = exports.OPENBRACE = exports.WS = exports.TLD = exports.SYM = exports.UNDERSCORE = exports.SLASH = exports.MAILTO = exports.PROTOCOL = exports.QUERY = exports.POUND = exports.PLUS = exports.NUM = exports.NL = exports.LOCALHOST = exports.PUNCTUATION = exports.DOT = exports.COLON = exports.AT = exports.DOMAIN = exports.Base = undefined;\n\nvar _createTokenClass = require('./create-token-class');\n\nvar _class = require('../../utils/class');\n\n/******************************************************************************\n\tText Tokens\n\tTokens composed of strings\n******************************************************************************/\n\n/**\n\tAbstract class used for manufacturing text tokens.\n\tPass in the value this token represents\n\n\t@class TextToken\n\t@abstract\n*/\nvar TextToken = (0, _createTokenClass.createTokenClass)();\nTextToken.prototype = {\n\ttoString: function toString() {\n\t\treturn this.v + '';\n\t}\n};\n\nfunction inheritsToken(value) {\n\tvar props = value ? { v: value } : {};\n\treturn (0, _class.inherits)(TextToken, (0, _createTokenClass.createTokenClass)(), props);\n}\n\n/**\n\tA valid domain token\n\t@class DOMAIN\n\t@extends TextToken\n*/\nvar DOMAIN = inheritsToken();\n\n/**\n\t@class AT\n\t@extends TextToken\n*/\nvar AT = inheritsToken('@');\n\n/**\n\tRepresents a single colon `:` character\n\n\t@class COLON\n\t@extends TextToken\n*/\nvar COLON = inheritsToken(':');\n\n/**\n\t@class DOT\n\t@extends TextToken\n*/\nvar DOT = inheritsToken('.');\n\n/**\n\tA character class that can surround the URL, but which the URL cannot begin\n\tor end with. Does not include certain English punctuation like parentheses.\n\n\t@class PUNCTUATION\n\t@extends TextToken\n*/\nvar PUNCTUATION = inheritsToken();\n\n/**\n\tThe word localhost (by itself)\n\t@class LOCALHOST\n\t@extends TextToken\n*/\nvar LOCALHOST = inheritsToken();\n\n/**\n\tNewline token\n\t@class NL\n\t@extends TextToken\n*/\nvar NL = inheritsToken('\\n');\n\n/**\n\t@class NUM\n\t@extends TextToken\n*/\nvar NUM = inheritsToken();\n\n/**\n\t@class PLUS\n\t@extends TextToken\n*/\nvar PLUS = inheritsToken('+');\n\n/**\n\t@class POUND\n\t@extends TextToken\n*/\nvar POUND = inheritsToken('#');\n\n/**\n\tRepresents a web URL protocol. Supported types include\n\n\t* `http:`\n\t* `https:`\n\t* `ftp:`\n\t* `ftps:`\n\n\t@class PROTOCOL\n\t@extends TextToken\n*/\nvar PROTOCOL = inheritsToken();\n\n/**\n\tRepresents the start of the email URI protocol\n\n\t@class MAILTO\n\t@extends TextToken\n*/\nvar MAILTO = inheritsToken('mailto:');\n\n/**\n\t@class QUERY\n\t@extends TextToken\n*/\nvar QUERY = inheritsToken('?');\n\n/**\n\t@class SLASH\n\t@extends TextToken\n*/\nvar SLASH = inheritsToken('/');\n\n/**\n\t@class UNDERSCORE\n\t@extends TextToken\n*/\nvar UNDERSCORE = inheritsToken('_');\n\n/**\n\tOne ore more non-whitespace symbol.\n\t@class SYM\n\t@extends TextToken\n*/\nvar SYM = inheritsToken();\n\n/**\n\t@class TLD\n\t@extends TextToken\n*/\nvar TLD = inheritsToken();\n\n/**\n\tRepresents a string of consecutive whitespace characters\n\n\t@class WS\n\t@extends TextToken\n*/\nvar WS = inheritsToken();\n\n/**\n\tOpening/closing bracket classes\n*/\n\nvar OPENBRACE = inheritsToken('{');\nvar OPENBRACKET = inheritsToken('[');\nvar OPENANGLEBRACKET = inheritsToken('<');\nvar OPENPAREN = inheritsToken('(');\nvar CLOSEBRACE = inheritsToken('}');\nvar CLOSEBRACKET = inheritsToken(']');\nvar CLOSEANGLEBRACKET = inheritsToken('>');\nvar CLOSEPAREN = inheritsToken(')');\n\nvar AMPERSAND = inheritsToken('&');\n\nexports.Base = TextToken;\nexports.DOMAIN = DOMAIN;\nexports.AT = AT;\nexports.COLON = COLON;\nexports.DOT = DOT;\nexports.PUNCTUATION = PUNCTUATION;\nexports.LOCALHOST = LOCALHOST;\nexports.NL = NL;\nexports.NUM = NUM;\nexports.PLUS = PLUS;\nexports.POUND = POUND;\nexports.QUERY = QUERY;\nexports.PROTOCOL = PROTOCOL;\nexports.MAILTO = MAILTO;\nexports.SLASH = SLASH;\nexports.UNDERSCORE = UNDERSCORE;\nexports.SYM = SYM;\nexports.TLD = TLD;\nexports.WS = WS;\nexports.OPENBRACE = OPENBRACE;\nexports.OPENBRACKET = OPENBRACKET;\nexports.OPENANGLEBRACKET = OPENANGLEBRACKET;\nexports.OPENPAREN = OPENPAREN;\nexports.CLOSEBRACE = CLOSEBRACE;\nexports.CLOSEBRACKET = CLOSEBRACKET;\nexports.CLOSEANGLEBRACKET = CLOSEANGLEBRACKET;\nexports.CLOSEPAREN = CLOSEPAREN;\nexports.AMPERSAND = AMPERSAND;\n\n},{\"../../utils/class\":9,\"./create-token-class\":5}],8:[function(require,module,exports){\nmodule.exports=[\n  \"aaa\",\n  \"aarp\",\n  \"abb\",\n  \"abbott\",\n  \"abogado\",\n  \"ac\",\n  \"academy\",\n  \"accenture\",\n  \"accountant\",\n  \"accountants\",\n  \"aco\",\n  \"active\",\n  \"actor\",\n  \"ad\",\n  \"adac\",\n  \"ads\",\n  \"adult\",\n  \"ae\",\n  \"aeg\",\n  \"aero\",\n  \"af\",\n  \"afl\",\n  \"ag\",\n  \"agency\",\n  \"ai\",\n  \"aig\",\n  \"airforce\",\n  \"airtel\",\n  \"al\",\n  \"alibaba\",\n  \"alipay\",\n  \"allfinanz\",\n  \"alsace\",\n  \"am\",\n  \"amica\",\n  \"amsterdam\",\n  \"an\",\n  \"analytics\",\n  \"android\",\n  \"ao\",\n  \"apartments\",\n  \"app\",\n  \"apple\",\n  \"aq\",\n  \"aquarelle\",\n  \"ar\",\n  \"aramco\",\n  \"archi\",\n  \"army\",\n  \"arpa\",\n  \"arte\",\n  \"as\",\n  \"asia\",\n  \"associates\",\n  \"at\",\n  \"attorney\",\n  \"au\",\n  \"auction\",\n  \"audi\",\n  \"audio\",\n  \"author\",\n  \"auto\",\n  \"autos\",\n  \"avianca\",\n  \"aw\",\n  \"ax\",\n  \"axa\",\n  \"az\",\n  \"azure\",\n  \"ba\",\n  \"baidu\",\n  \"band\",\n  \"bank\",\n  \"bar\",\n  \"barcelona\",\n  \"barclaycard\",\n  \"barclays\",\n  \"bargains\",\n  \"bauhaus\",\n  \"bayern\",\n  \"bb\",\n  \"bbc\",\n  \"bbva\",\n  \"bcg\",\n  \"bcn\",\n  \"bd\",\n  \"be\",\n  \"beats\",\n  \"beer\",\n  \"bentley\",\n  \"berlin\",\n  \"best\",\n  \"bet\",\n  \"bf\",\n  \"bg\",\n  \"bh\",\n  \"bharti\",\n  \"bi\",\n  \"bible\",\n  \"bid\",\n  \"bike\",\n  \"bing\",\n  \"bingo\",\n  \"bio\",\n  \"biz\",\n  \"bj\",\n  \"black\",\n  \"blackfriday\",\n  \"bloomberg\",\n  \"blue\",\n  \"bm\",\n  \"bms\",\n  \"bmw\",\n  \"bn\",\n  \"bnl\",\n  \"bnpparibas\",\n  \"bo\",\n  \"boats\",\n  \"boehringer\",\n  \"bom\",\n  \"bond\",\n  \"boo\",\n  \"book\",\n  \"boots\",\n  \"bosch\",\n  \"bostik\",\n  \"bot\",\n  \"boutique\",\n  \"br\",\n  \"bradesco\",\n  \"bridgestone\",\n  \"broadway\",\n  \"broker\",\n  \"brother\",\n  \"brussels\",\n  \"bs\",\n  \"bt\",\n  \"budapest\",\n  \"bugatti\",\n  \"build\",\n  \"builders\",\n  \"business\",\n  \"buy\",\n  \"buzz\",\n  \"bv\",\n  \"bw\",\n  \"by\",\n  \"bz\",\n  \"bzh\",\n  \"ca\",\n  \"cab\",\n  \"cafe\",\n  \"cal\",\n  \"call\",\n  \"camera\",\n  \"camp\",\n  \"cancerresearch\",\n  \"canon\",\n  \"capetown\",\n  \"capital\",\n  \"car\",\n  \"caravan\",\n  \"cards\",\n  \"care\",\n  \"career\",\n  \"careers\",\n  \"cars\",\n  \"cartier\",\n  \"casa\",\n  \"cash\",\n  \"casino\",\n  \"cat\",\n  \"catering\",\n  \"cba\",\n  \"cbn\",\n  \"cc\",\n  \"cd\",\n  \"ceb\",\n  \"center\",\n  \"ceo\",\n  \"cern\",\n  \"cf\",\n  \"cfa\",\n  \"cfd\",\n  \"cg\",\n  \"ch\",\n  \"chanel\",\n  \"channel\",\n  \"chase\",\n  \"chat\",\n  \"cheap\",\n  \"chloe\",\n  \"christmas\",\n  \"chrome\",\n  \"church\",\n  \"ci\",\n  \"cipriani\",\n  \"circle\",\n  \"cisco\",\n  \"citic\",\n  \"city\",\n  \"cityeats\",\n  \"ck\",\n  \"cl\",\n  \"claims\",\n  \"cleaning\",\n  \"click\",\n  \"clinic\",\n  \"clinique\",\n  \"clothing\",\n  \"cloud\",\n  \"club\",\n  \"clubmed\",\n  \"cm\",\n  \"cn\",\n  \"co\",\n  \"coach\",\n  \"codes\",\n  \"coffee\",\n  \"college\",\n  \"cologne\",\n  \"com\",\n  \"commbank\",\n  \"community\",\n  \"company\",\n  \"compare\",\n  \"computer\",\n  \"comsec\",\n  \"condos\",\n  \"construction\",\n  \"consulting\",\n  \"contact\",\n  \"contractors\",\n  \"cooking\",\n  \"cool\",\n  \"coop\",\n  \"corsica\",\n  \"country\",\n  \"coupon\",\n  \"coupons\",\n  \"courses\",\n  \"cr\",\n  \"credit\",\n  \"creditcard\",\n  \"creditunion\",\n  \"cricket\",\n  \"crown\",\n  \"crs\",\n  \"cruises\",\n  \"csc\",\n  \"cu\",\n  \"cuisinella\",\n  \"cv\",\n  \"cw\",\n  \"cx\",\n  \"cy\",\n  \"cymru\",\n  \"cyou\",\n  \"cz\",\n  \"dabur\",\n  \"dad\",\n  \"dance\",\n  \"date\",\n  \"dating\",\n  \"datsun\",\n  \"day\",\n  \"dclk\",\n  \"de\",\n  \"dealer\",\n  \"deals\",\n  \"degree\",\n  \"delivery\",\n  \"dell\",\n  \"deloitte\",\n  \"delta\",\n  \"democrat\",\n  \"dental\",\n  \"dentist\",\n  \"desi\",\n  \"design\",\n  \"dev\",\n  \"diamonds\",\n  \"diet\",\n  \"digital\",\n  \"direct\",\n  \"directory\",\n  \"discount\",\n  \"dj\",\n  \"dk\",\n  \"dm\",\n  \"dnp\",\n  \"do\",\n  \"docs\",\n  \"dog\",\n  \"doha\",\n  \"domains\",\n  \"download\",\n  \"drive\",\n  \"dubai\",\n  \"durban\",\n  \"dvag\",\n  \"dz\",\n  \"earth\",\n  \"eat\",\n  \"ec\",\n  \"edeka\",\n  \"edu\",\n  \"education\",\n  \"ee\",\n  \"eg\",\n  \"email\",\n  \"emerck\",\n  \"energy\",\n  \"engineer\",\n  \"engineering\",\n  \"enterprises\",\n  \"epson\",\n  \"equipment\",\n  \"er\",\n  \"erni\",\n  \"es\",\n  \"esq\",\n  \"estate\",\n  \"et\",\n  \"eu\",\n  \"eurovision\",\n  \"eus\",\n  \"events\",\n  \"everbank\",\n  \"exchange\",\n  \"expert\",\n  \"exposed\",\n  \"express\",\n  \"fage\",\n  \"fail\",\n  \"fairwinds\",\n  \"faith\",\n  \"family\",\n  \"fan\",\n  \"fans\",\n  \"farm\",\n  \"fashion\",\n  \"fast\",\n  \"feedback\",\n  \"ferrero\",\n  \"fi\",\n  \"film\",\n  \"final\",\n  \"finance\",\n  \"financial\",\n  \"firestone\",\n  \"firmdale\",\n  \"fish\",\n  \"fishing\",\n  \"fit\",\n  \"fitness\",\n  \"fj\",\n  \"fk\",\n  \"flickr\",\n  \"flights\",\n  \"florist\",\n  \"flowers\",\n  \"flsmidth\",\n  \"fly\",\n  \"fm\",\n  \"fo\",\n  \"foo\",\n  \"football\",\n  \"ford\",\n  \"forex\",\n  \"forsale\",\n  \"forum\",\n  \"foundation\",\n  \"fox\",\n  \"fr\",\n  \"fresenius\",\n  \"frl\",\n  \"frogans\",\n  \"frontier\",\n  \"fund\",\n  \"furniture\",\n  \"futbol\",\n  \"fyi\",\n  \"ga\",\n  \"gal\",\n  \"gallery\",\n  \"gallup\",\n  \"game\",\n  \"garden\",\n  \"gb\",\n  \"gbiz\",\n  \"gd\",\n  \"gdn\",\n  \"ge\",\n  \"gea\",\n  \"gent\",\n  \"genting\",\n  \"gf\",\n  \"gg\",\n  \"ggee\",\n  \"gh\",\n  \"gi\",\n  \"gift\",\n  \"gifts\",\n  \"gives\",\n  \"giving\",\n  \"gl\",\n  \"glass\",\n  \"gle\",\n  \"global\",\n  \"globo\",\n  \"gm\",\n  \"gmail\",\n  \"gmbh\",\n  \"gmo\",\n  \"gmx\",\n  \"gn\",\n  \"gold\",\n  \"goldpoint\",\n  \"golf\",\n  \"goo\",\n  \"goog\",\n  \"google\",\n  \"gop\",\n  \"got\",\n  \"gov\",\n  \"gp\",\n  \"gq\",\n  \"gr\",\n  \"grainger\",\n  \"graphics\",\n  \"gratis\",\n  \"green\",\n  \"gripe\",\n  \"group\",\n  \"gs\",\n  \"gt\",\n  \"gu\",\n  \"gucci\",\n  \"guge\",\n  \"guide\",\n  \"guitars\",\n  \"guru\",\n  \"gw\",\n  \"gy\",\n  \"hamburg\",\n  \"hangout\",\n  \"haus\",\n  \"hdfcbank\",\n  \"health\",\n  \"healthcare\",\n  \"help\",\n  \"helsinki\",\n  \"here\",\n  \"hermes\",\n  \"hiphop\",\n  \"hitachi\",\n  \"hiv\",\n  \"hk\",\n  \"hm\",\n  \"hn\",\n  \"hockey\",\n  \"holdings\",\n  \"holiday\",\n  \"homedepot\",\n  \"homes\",\n  \"honda\",\n  \"horse\",\n  \"host\",\n  \"hosting\",\n  \"hoteles\",\n  \"hotmail\",\n  \"house\",\n  \"how\",\n  \"hr\",\n  \"hsbc\",\n  \"ht\",\n  \"hu\",\n  \"hyundai\",\n  \"ibm\",\n  \"icbc\",\n  \"ice\",\n  \"icu\",\n  \"id\",\n  \"ie\",\n  \"ifm\",\n  \"iinet\",\n  \"il\",\n  \"im\",\n  \"immo\",\n  \"immobilien\",\n  \"in\",\n  \"industries\",\n  \"infiniti\",\n  \"info\",\n  \"ing\",\n  \"ink\",\n  \"institute\",\n  \"insurance\",\n  \"insure\",\n  \"int\",\n  \"international\",\n  \"investments\",\n  \"io\",\n  \"ipiranga\",\n  \"iq\",\n  \"ir\",\n  \"irish\",\n  \"is\",\n  \"iselect\",\n  \"ist\",\n  \"istanbul\",\n  \"it\",\n  \"itau\",\n  \"iwc\",\n  \"jaguar\",\n  \"java\",\n  \"jcb\",\n  \"je\",\n  \"jetzt\",\n  \"jewelry\",\n  \"jlc\",\n  \"jll\",\n  \"jm\",\n  \"jmp\",\n  \"jo\",\n  \"jobs\",\n  \"joburg\",\n  \"jot\",\n  \"joy\",\n  \"jp\",\n  \"jpmorgan\",\n  \"jprs\",\n  \"juegos\",\n  \"kaufen\",\n  \"kddi\",\n  \"ke\",\n  \"kerryhotels\",\n  \"kerrylogistics\",\n  \"kerryproperties\",\n  \"kfh\",\n  \"kg\",\n  \"kh\",\n  \"ki\",\n  \"kia\",\n  \"kim\",\n  \"kinder\",\n  \"kitchen\",\n  \"kiwi\",\n  \"km\",\n  \"kn\",\n  \"koeln\",\n  \"komatsu\",\n  \"kp\",\n  \"kpn\",\n  \"kr\",\n  \"krd\",\n  \"kred\",\n  \"kuokgroup\",\n  \"kw\",\n  \"ky\",\n  \"kyoto\",\n  \"kz\",\n  \"la\",\n  \"lacaixa\",\n  \"lamborghini\",\n  \"lamer\",\n  \"lancaster\",\n  \"land\",\n  \"landrover\",\n  \"lanxess\",\n  \"lasalle\",\n  \"lat\",\n  \"latrobe\",\n  \"law\",\n  \"lawyer\",\n  \"lb\",\n  \"lc\",\n  \"lds\",\n  \"lease\",\n  \"leclerc\",\n  \"legal\",\n  \"lexus\",\n  \"lgbt\",\n  \"li\",\n  \"liaison\",\n  \"lidl\",\n  \"life\",\n  \"lifeinsurance\",\n  \"lifestyle\",\n  \"lighting\",\n  \"like\",\n  \"limited\",\n  \"limo\",\n  \"lincoln\",\n  \"linde\",\n  \"link\",\n  \"live\",\n  \"living\",\n  \"lixil\",\n  \"lk\",\n  \"loan\",\n  \"loans\",\n  \"local\",\n  \"locus\",\n  \"lol\",\n  \"london\",\n  \"lotte\",\n  \"lotto\",\n  \"love\",\n  \"lr\",\n  \"ls\",\n  \"lt\",\n  \"ltd\",\n  \"ltda\",\n  \"lu\",\n  \"lupin\",\n  \"luxe\",\n  \"luxury\",\n  \"lv\",\n  \"ly\",\n  \"ma\",\n  \"madrid\",\n  \"maif\",\n  \"maison\",\n  \"makeup\",\n  \"man\",\n  \"management\",\n  \"mango\",\n  \"market\",\n  \"marketing\",\n  \"markets\",\n  \"marriott\",\n  \"mba\",\n  \"mc\",\n  \"md\",\n  \"me\",\n  \"med\",\n  \"media\",\n  \"meet\",\n  \"melbourne\",\n  \"meme\",\n  \"memorial\",\n  \"men\",\n  \"menu\",\n  \"meo\",\n  \"mg\",\n  \"mh\",\n  \"miami\",\n  \"microsoft\",\n  \"mil\",\n  \"mini\",\n  \"mk\",\n  \"ml\",\n  \"mm\",\n  \"mma\",\n  \"mn\",\n  \"mo\",\n  \"mobi\",\n  \"mobily\",\n  \"moda\",\n  \"moe\",\n  \"moi\",\n  \"mom\",\n  \"monash\",\n  \"money\",\n  \"montblanc\",\n  \"mormon\",\n  \"mortgage\",\n  \"moscow\",\n  \"motorcycles\",\n  \"mov\",\n  \"movie\",\n  \"movistar\",\n  \"mp\",\n  \"mq\",\n  \"mr\",\n  \"ms\",\n  \"mt\",\n  \"mtn\",\n  \"mtpc\",\n  \"mtr\",\n  \"mu\",\n  \"museum\",\n  \"mutuelle\",\n  \"mv\",\n  \"mw\",\n  \"mx\",\n  \"my\",\n  \"mz\",\n  \"na\",\n  \"nadex\",\n  \"nagoya\",\n  \"name\",\n  \"natura\",\n  \"navy\",\n  \"nc\",\n  \"ne\",\n  \"nec\",\n  \"net\",\n  \"netbank\",\n  \"network\",\n  \"neustar\",\n  \"new\",\n  \"news\",\n  \"nexus\",\n  \"nf\",\n  \"ng\",\n  \"ngo\",\n  \"nhk\",\n  \"ni\",\n  \"nico\",\n  \"nikon\",\n  \"ninja\",\n  \"nissan\",\n  \"nl\",\n  \"no\",\n  \"nokia\",\n  \"norton\",\n  \"nowruz\",\n  \"np\",\n  \"nr\",\n  \"nra\",\n  \"nrw\",\n  \"ntt\",\n  \"nu\",\n  \"nyc\",\n  \"nz\",\n  \"obi\",\n  \"office\",\n  \"okinawa\",\n  \"om\",\n  \"omega\",\n  \"one\",\n  \"ong\",\n  \"onl\",\n  \"online\",\n  \"ooo\",\n  \"oracle\",\n  \"orange\",\n  \"org\",\n  \"organic\",\n  \"origins\",\n  \"osaka\",\n  \"otsuka\",\n  \"ovh\",\n  \"pa\",\n  \"page\",\n  \"pamperedchef\",\n  \"panerai\",\n  \"paris\",\n  \"pars\",\n  \"partners\",\n  \"parts\",\n  \"party\",\n  \"passagens\",\n  \"pe\",\n  \"pet\",\n  \"pf\",\n  \"pg\",\n  \"ph\",\n  \"pharmacy\",\n  \"philips\",\n  \"photo\",\n  \"photography\",\n  \"photos\",\n  \"physio\",\n  \"piaget\",\n  \"pics\",\n  \"pictet\",\n  \"pictures\",\n  \"pid\",\n  \"pin\",\n  \"ping\",\n  \"pink\",\n  \"pizza\",\n  \"pk\",\n  \"pl\",\n  \"place\",\n  \"play\",\n  \"playstation\",\n  \"plumbing\",\n  \"plus\",\n  \"pm\",\n  \"pn\",\n  \"pohl\",\n  \"poker\",\n  \"porn\",\n  \"post\",\n  \"pr\",\n  \"praxi\",\n  \"press\",\n  \"pro\",\n  \"prod\",\n  \"productions\",\n  \"prof\",\n  \"promo\",\n  \"properties\",\n  \"property\",\n  \"protection\",\n  \"ps\",\n  \"pt\",\n  \"pub\",\n  \"pw\",\n  \"pwc\",\n  \"py\",\n  \"qa\",\n  \"qpon\",\n  \"quebec\",\n  \"quest\",\n  \"racing\",\n  \"re\",\n  \"read\",\n  \"realtor\",\n  \"realty\",\n  \"recipes\",\n  \"red\",\n  \"redstone\",\n  \"redumbrella\",\n  \"rehab\",\n  \"reise\",\n  \"reisen\",\n  \"reit\",\n  \"ren\",\n  \"rent\",\n  \"rentals\",\n  \"repair\",\n  \"report\",\n  \"republican\",\n  \"rest\",\n  \"restaurant\",\n  \"review\",\n  \"reviews\",\n  \"rexroth\",\n  \"rich\",\n  \"ricoh\",\n  \"rio\",\n  \"rip\",\n  \"ro\",\n  \"rocher\",\n  \"rocks\",\n  \"rodeo\",\n  \"room\",\n  \"rs\",\n  \"rsvp\",\n  \"ru\",\n  \"ruhr\",\n  \"run\",\n  \"rw\",\n  \"rwe\",\n  \"ryukyu\",\n  \"sa\",\n  \"saarland\",\n  \"safe\",\n  \"safety\",\n  \"sakura\",\n  \"sale\",\n  \"salon\",\n  \"samsung\",\n  \"sandvik\",\n  \"sandvikcoromant\",\n  \"sanofi\",\n  \"sap\",\n  \"sapo\",\n  \"sarl\",\n  \"sas\",\n  \"saxo\",\n  \"sb\",\n  \"sbs\",\n  \"sc\",\n  \"sca\",\n  \"scb\",\n  \"schaeffler\",\n  \"schmidt\",\n  \"scholarships\",\n  \"school\",\n  \"schule\",\n  \"schwarz\",\n  \"science\",\n  \"scor\",\n  \"scot\",\n  \"sd\",\n  \"se\",\n  \"seat\",\n  \"security\",\n  \"seek\",\n  \"select\",\n  \"sener\",\n  \"services\",\n  \"seven\",\n  \"sew\",\n  \"sex\",\n  \"sexy\",\n  \"sfr\",\n  \"sg\",\n  \"sh\",\n  \"sharp\",\n  \"shell\",\n  \"shia\",\n  \"shiksha\",\n  \"shoes\",\n  \"show\",\n  \"shriram\",\n  \"si\",\n  \"singles\",\n  \"site\",\n  \"sj\",\n  \"sk\",\n  \"ski\",\n  \"skin\",\n  \"sky\",\n  \"skype\",\n  \"sl\",\n  \"sm\",\n  \"smile\",\n  \"sn\",\n  \"sncf\",\n  \"so\",\n  \"soccer\",\n  \"social\",\n  \"softbank\",\n  \"software\",\n  \"sohu\",\n  \"solar\",\n  \"solutions\",\n  \"song\",\n  \"sony\",\n  \"soy\",\n  \"space\",\n  \"spiegel\",\n  \"spot\",\n  \"spreadbetting\",\n  \"sr\",\n  \"srl\",\n  \"st\",\n  \"stada\",\n  \"star\",\n  \"starhub\",\n  \"statefarm\",\n  \"statoil\",\n  \"stc\",\n  \"stcgroup\",\n  \"stockholm\",\n  \"storage\",\n  \"store\",\n  \"studio\",\n  \"study\",\n  \"style\",\n  \"su\",\n  \"sucks\",\n  \"supplies\",\n  \"supply\",\n  \"support\",\n  \"surf\",\n  \"surgery\",\n  \"suzuki\",\n  \"sv\",\n  \"swatch\",\n  \"swiss\",\n  \"sx\",\n  \"sy\",\n  \"sydney\",\n  \"symantec\",\n  \"systems\",\n  \"sz\",\n  \"tab\",\n  \"taipei\",\n  \"taobao\",\n  \"tatamotors\",\n  \"tatar\",\n  \"tattoo\",\n  \"tax\",\n  \"taxi\",\n  \"tc\",\n  \"tci\",\n  \"td\",\n  \"team\",\n  \"tech\",\n  \"technology\",\n  \"tel\",\n  \"telecity\",\n  \"telefonica\",\n  \"temasek\",\n  \"tennis\",\n  \"tf\",\n  \"tg\",\n  \"th\",\n  \"thd\",\n  \"theater\",\n  \"theatre\",\n  \"tickets\",\n  \"tienda\",\n  \"tiffany\",\n  \"tips\",\n  \"tires\",\n  \"tirol\",\n  \"tj\",\n  \"tk\",\n  \"tl\",\n  \"tm\",\n  \"tmall\",\n  \"tn\",\n  \"to\",\n  \"today\",\n  \"tokyo\",\n  \"tools\",\n  \"top\",\n  \"toray\",\n  \"toshiba\",\n  \"total\",\n  \"tours\",\n  \"town\",\n  \"toyota\",\n  \"toys\",\n  \"tp\",\n  \"tr\",\n  \"trade\",\n  \"trading\",\n  \"training\",\n  \"travel\",\n  \"travelers\",\n  \"travelersinsurance\",\n  \"trust\",\n  \"trv\",\n  \"tt\",\n  \"tube\",\n  \"tui\",\n  \"tunes\",\n  \"tushu\",\n  \"tv\",\n  \"tvs\",\n  \"tw\",\n  \"tz\",\n  \"ua\",\n  \"ubs\",\n  \"ug\",\n  \"uk\",\n  \"unicom\",\n  \"university\",\n  \"uno\",\n  \"uol\",\n  \"us\",\n  \"uy\",\n  \"uz\",\n  \"va\",\n  \"vacations\",\n  \"vana\",\n  \"vc\",\n  \"ve\",\n  \"vegas\",\n  \"ventures\",\n  \"verisign\",\n  \"versicherung\",\n  \"vet\",\n  \"vg\",\n  \"vi\",\n  \"viajes\",\n  \"video\",\n  \"viking\",\n  \"villas\",\n  \"vin\",\n  \"vip\",\n  \"virgin\",\n  \"vision\",\n  \"vista\",\n  \"vistaprint\",\n  \"viva\",\n  \"vlaanderen\",\n  \"vn\",\n  \"vodka\",\n  \"volkswagen\",\n  \"vote\",\n  \"voting\",\n  \"voto\",\n  \"voyage\",\n  \"vu\",\n  \"vuelos\",\n  \"wales\",\n  \"walter\",\n  \"wang\",\n  \"wanggou\",\n  \"watch\",\n  \"watches\",\n  \"weather\",\n  \"weatherchannel\",\n  \"webcam\",\n  \"weber\",\n  \"website\",\n  \"wed\",\n  \"wedding\",\n  \"weir\",\n  \"wf\",\n  \"whoswho\",\n  \"wien\",\n  \"wiki\",\n  \"williamhill\",\n  \"win\",\n  \"windows\",\n  \"wine\",\n  \"wme\",\n  \"wolterskluwer\",\n  \"work\",\n  \"works\",\n  \"world\",\n  \"ws\",\n  \"wtc\",\n  \"wtf\",\n  \"xbox\",\n  \"xerox\",\n  \"xin\",\n  \"xperia\",\n  \"xxx\",\n  \"xyz\",\n  \"yachts\",\n  \"yahoo\",\n  \"yamaxun\",\n  \"yandex\",\n  \"ye\",\n  \"yodobashi\",\n  \"yoga\",\n  \"yokohama\",\n  \"youtube\",\n  \"yt\",\n  \"za\",\n  \"zara\",\n  \"zero\",\n  \"zip\",\n  \"zm\",\n  \"zone\",\n  \"zuerich\",\n  \"zw\",\n  \"а.рф\",\n  \"б.рф\",\n  \"в.рф\",\n  \"г.рф\",\n  \"дети\",\n  \"е.рф\",\n  \"ё.рф\",\n  \"ж.рф\",\n  \"з.рф\",\n  \"испытание\",\n  \"католик\",\n  \"ком\",\n  \"л.рф\",\n  \"москва\",\n  \"н.рф\",\n  \"онлайн\",\n  \"орг\",\n  \"п.рф\",\n  \"руc\",\n  \"рф\",\n  \"сайт\",\n  \"т.рф\",\n  \"у.рф\",\n  \"ф.рф\",\n  \"х.рф\",\n  \"ц.рф\",\n  \"ч.рф\",\n  \"ш.рф\",\n  \"щ.рф\",\n  \"ъ.рф\",\n  \"ы.рф\",\n  \"ь.рф\",\n  \"э.рф\",\n  \"ю.рф\",\n  \"я.рф\"\n]\n\n},{}],9:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.inherits = inherits;\nfunction inherits(parent, child) {\n\tvar props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\tvar extended = Object.create(parent.prototype);\n\tfor (var p in props) {\n\t\textended[p] = props[p];\n\t}\n\textended.constructor = child;\n\tchild.prototype = extended;\n\treturn child;\n}\n\n},{}]},{},[1])(1)\n});\n\n","import * as scanner from './core/scanner';\nimport * as parser from './core/parser';\n\nexport default function tokenizer(str) {\n\treturn parser.run(scanner.run(str));\n};\nexport {parser};\nexport {scanner};\nglobal.tokenizer = tokenizer;\n","/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/Email_address (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main parser\n*/\n\nimport {TokenState as State} from './state';\nimport * as MULTI_TOKENS from './tokens/multi';\nimport {\n\tDOMAIN,\n\tAT,\n\tCOLON,\n\tDOT,\n\tPUNCTUATION,\n\tLOCALHOST,\n\tNL as TNL,\n\tNUM,\n\tPLUS,\n\tPOUND,\n\tPROTOCOL,\n\tMAILTO,\n\tQUERY,\n\tSLASH,\n\tUNDERSCORE,\n\tSYM,\n\tTLD,\n\tOPENBRACE,\n\tOPENBRACKET,\n\tOPENANGLEBRACKET,\n\tOPENPAREN,\n\tCLOSEBRACE,\n\tCLOSEBRACKET,\n\tCLOSEANGLEBRACKET,\n\tCLOSEPAREN,\n\tAMPERSAND\n} from './tokens/text';\n\nimport {\n\tMAILTOEMAIL,\n\tEMAIL,\n\tNL as MNL,\n\tTEXT,\n\tURL\n} from './tokens/multi';\n\nlet makeState = (tokenClass) => new State(tokenClass);\n\n// The universal starting state.\nlet S_START = makeState();\n\n// Intermediate states for URLs. Note that domains that begin with a protocol\n// are treated slighly differently from those that don't.\nlet S_PROTOCOL\t\t\t\t\t\t= makeState(); // e.g., 'http:'\nlet S_MAILTO\t\t\t\t\t\t= makeState(); // 'mailto:'\nlet S_PROTOCOL_SLASH\t\t\t\t= makeState(); // e.g., '/', 'http:/''\nlet S_PROTOCOL_SLASH_SLASH\t\t\t= makeState();  // e.g., '//', 'http://'\nlet S_DOMAIN\t\t\t\t\t\t= makeState(); // parsed string ends with a potential domain name (A)\nlet S_DOMAIN_DOT\t\t\t\t\t= makeState(); // (A) domain followed by DOT\nlet S_TLD\t\t\t\t\t\t\t= makeState(URL); // (A) Simplest possible URL with no query string\nlet S_TLD_COLON\t\t\t\t\t\t= makeState(); // (A) URL followed by colon (potential port number here)\nlet S_TLD_PORT\t\t\t\t\t\t= makeState(URL); // TLD followed by a port number\nlet S_URL\t\t\t\t\t\t\t= makeState(URL); // Long URL with optional port and maybe query string\nlet S_URL_NON_ACCEPTING\t\t\t\t= makeState(); // URL followed by some symbols (will not be part of the final URL)\nlet S_URL_OPENBRACE\t\t\t\t\t= makeState(); // URL followed by {\nlet S_URL_OPENBRACKET\t\t\t\t= makeState(); // URL followed by [\nlet S_URL_OPENANGLEBRACKET\t\t\t= makeState(); // URL followed by <\nlet S_URL_OPENPAREN\t\t\t\t\t= makeState(); // URL followed by (\nlet S_URL_OPENBRACE_Q\t\t\t\t= makeState(URL); // URL followed by { and some symbols that the URL can end it\nlet S_URL_OPENBRACKET_Q\t\t\t\t= makeState(URL); // URL followed by [ and some symbols that the URL can end it\nlet S_URL_OPENANGLEBRACKET_Q\t\t= makeState(URL); // URL followed by < and some symbols that the URL can end it\nlet S_URL_OPENPAREN_Q\t\t\t\t= makeState(URL); // URL followed by ( and some symbols that the URL can end it\nlet S_URL_OPENBRACE_SYMS\t\t\t= makeState(); // S_URL_OPENBRACE_Q followed by some symbols it cannot end it\nlet S_URL_OPENBRACKET_SYMS\t\t\t= makeState(); // S_URL_OPENBRACKET_Q followed by some symbols it cannot end it\nlet S_URL_OPENANGLEBRACKET_SYMS\t\t= makeState(); // S_URL_OPENANGLEBRACKET_Q followed by some symbols it cannot end it\nlet S_URL_OPENPAREN_SYMS\t\t\t= makeState(); // S_URL_OPENPAREN_Q followed by some symbols it cannot end it\nlet S_EMAIL_DOMAIN\t\t\t\t\t= makeState(); // parsed string starts with local email info + @ with a potential domain name (C)\nlet S_EMAIL_DOMAIN_DOT\t\t\t\t= makeState(); // (C) domain followed by DOT\nlet S_EMAIL\t\t\t\t\t\t\t= makeState(EMAIL); // (C) Possible email address (could have more topLevelDomainNames)\nlet S_EMAIL_COLON\t\t\t\t\t= makeState(); // (C) URL followed by colon (potential port number here)\nlet S_EMAIL_PORT\t\t\t\t\t= makeState(EMAIL); // (C) Email address with a port\nlet S_MAILTO_EMAIL\t\t\t\t\t= makeState(MAILTOEMAIL); // Email that begins with the mailto prefix (D)\nlet S_MAILTO_EMAIL_NON_ACCEPTING\t= makeState(); // (D) Followed by some non-query string chars\nlet S_LOCALPART\t\t\t\t\t\t= makeState(); // Local part of the email address\nlet S_LOCALPART_AT\t\t\t\t\t= makeState(); // Local part of the email address plus @\nlet S_LOCALPART_DOT\t\t\t\t\t= makeState(); // Local part of the email address plus '.' (localpart cannot end in .)\nlet S_NL\t\t\t\t\t\t\t= makeState(MNL); // single new line\n\n// Make path from start to protocol (with '//')\nS_START\n.on(TNL, S_NL)\n.on(PROTOCOL, S_PROTOCOL)\n.on(MAILTO, S_MAILTO)\n.on(SLASH, S_PROTOCOL_SLASH);\n\nS_PROTOCOL.on(SLASH, S_PROTOCOL_SLASH);\nS_PROTOCOL_SLASH.on(SLASH, S_PROTOCOL_SLASH_SLASH);\n\n// The very first potential domain name\nS_START\n.on(TLD, S_DOMAIN)\n.on(DOMAIN, S_DOMAIN)\n.on(LOCALHOST, S_TLD)\n.on(NUM, S_DOMAIN);\n\n// Force URL for protocol followed by anything sane\nS_PROTOCOL_SLASH_SLASH\n.on(TLD, S_URL)\n.on(DOMAIN, S_URL)\n.on(NUM, S_URL)\n.on(LOCALHOST, S_URL);\n\n// Account for dots and hyphens\n// hyphens are usually parts of domain names\nS_DOMAIN.on(DOT, S_DOMAIN_DOT);\nS_EMAIL_DOMAIN.on(DOT, S_EMAIL_DOMAIN_DOT);\n\n// Hyphen can jump back to a domain name\n\n// After the first domain and a dot, we can find either a URL or another domain\nS_DOMAIN_DOT\n.on(TLD, S_TLD)\n.on(DOMAIN, S_DOMAIN)\n.on(NUM, S_DOMAIN)\n.on(LOCALHOST, S_DOMAIN);\n\nS_EMAIL_DOMAIN_DOT\n.on(TLD, S_EMAIL)\n.on(DOMAIN, S_EMAIL_DOMAIN)\n.on(NUM, S_EMAIL_DOMAIN)\n.on(LOCALHOST, S_EMAIL_DOMAIN);\n\n// S_TLD accepts! But the URL could be longer, try to find a match greedily\n// The `run` function should be able to \"rollback\" to the accepting state\nS_TLD.on(DOT, S_DOMAIN_DOT);\nS_EMAIL.on(DOT, S_EMAIL_DOMAIN_DOT);\n\n// Become real URLs after `SLASH` or `COLON NUM SLASH`\n// Here PSS and non-PSS converge\nS_TLD\n.on(COLON, S_TLD_COLON)\n.on(SLASH, S_URL);\nS_TLD_COLON.on(NUM, S_TLD_PORT);\nS_TLD_PORT.on(SLASH, S_URL);\nS_EMAIL.on(COLON, S_EMAIL_COLON);\nS_EMAIL_COLON.on(NUM, S_EMAIL_PORT);\n\n// Types of characters the URL can definitely end in\nlet qsAccepting = [\n\tDOMAIN,\n\tAT,\n\tLOCALHOST,\n\tNUM,\n\tPLUS,\n\tPOUND,\n\tPROTOCOL,\n\tSLASH,\n\tTLD,\n\tUNDERSCORE,\n\tSYM,\n\tAMPERSAND\n];\n\n// Types of tokens that can follow a URL and be part of the query string\n// but cannot be the very last characters\n// Characters that cannot appear in the URL at all should be excluded\nlet qsNonAccepting = [\n\tCOLON,\n\tDOT,\n\tQUERY,\n\tPUNCTUATION,\n\tCLOSEBRACE,\n\tCLOSEBRACKET,\n\tCLOSEANGLEBRACKET,\n\tCLOSEPAREN,\n\tOPENBRACE,\n\tOPENBRACKET,\n\tOPENANGLEBRACKET,\n\tOPENPAREN\n];\n\n// These states are responsible primarily for determining whether or not to\n// include the final round bracket.\n\n// URL, followed by an opening bracket\nS_URL\n.on(OPENBRACE, S_URL_OPENBRACE)\n.on(OPENBRACKET, S_URL_OPENBRACKET)\n.on(OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET)\n.on(OPENPAREN, S_URL_OPENPAREN);\n\n// URL with extra symbols at the end, followed by an opening bracket\nS_URL_NON_ACCEPTING\n.on(OPENBRACE, S_URL_OPENBRACE)\n.on(OPENBRACKET, S_URL_OPENBRACKET)\n.on(OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET)\n.on(OPENPAREN, S_URL_OPENPAREN);\n\n// Closing bracket component. This character WILL be included in the URL\nS_URL_OPENBRACE.on(CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET.on(CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET.on(CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN.on(CLOSEPAREN, S_URL);\nS_URL_OPENBRACE_Q.on(CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET_Q.on(CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET_Q.on(CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN_Q.on(CLOSEPAREN, S_URL);\nS_URL_OPENBRACE_SYMS.on(CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET_SYMS.on(CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET_SYMS.on(CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN_SYMS.on(CLOSEPAREN, S_URL);\n\n// URL that beings with an opening bracket, followed by a symbols.\n// Note that the final state can still be `S_URL_OPENBRACE_Q` (if the URL only\n// has a single opening bracket for some reason).\nS_URL_OPENBRACE.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);\nS_URL_OPENBRACKET.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);\nS_URL_OPENANGLEBRACKET.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\nS_URL_OPENPAREN.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);\n\n// URL that begins with an opening bracket, followed by some symbols\nS_URL_OPENBRACE_Q.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_Q.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_Q.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_Q.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE_Q.on(qsNonAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_Q.on(qsNonAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_Q.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_Q.on(qsNonAccepting, S_URL_OPENPAREN_Q);\n\nS_URL_OPENBRACE_SYMS.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_SYMS.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_SYMS.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_SYMS.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE_SYMS.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);\nS_URL_OPENBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);\nS_URL_OPENANGLEBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\nS_URL_OPENPAREN_SYMS.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);\n\n// Account for the query string\nS_URL.on(qsAccepting, S_URL);\nS_URL_NON_ACCEPTING.on(qsAccepting, S_URL);\n\nS_URL.on(qsNonAccepting, S_URL_NON_ACCEPTING);\nS_URL_NON_ACCEPTING.on(qsNonAccepting, S_URL_NON_ACCEPTING);\n\n// Email address-specific state definitions\n// Note: We are not allowing '/' in email addresses since this would interfere\n// with real URLs\n\n// For addresses with the mailto prefix\n// 'mailto:' followed by anything sane is a valid email\nS_MAILTO\n.on(TLD, S_MAILTO_EMAIL)\n.on(DOMAIN, S_MAILTO_EMAIL)\n.on(NUM, S_MAILTO_EMAIL)\n.on(LOCALHOST, S_MAILTO_EMAIL);\n\n// Greedily get more potential valid email values\nS_MAILTO_EMAIL\n.on(qsAccepting, S_MAILTO_EMAIL)\n.on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\nS_MAILTO_EMAIL_NON_ACCEPTING\n.on(qsAccepting, S_MAILTO_EMAIL)\n.on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\n\n// For addresses without the mailto prefix\n// Tokens allowed in the localpart of the email\nlet localpartAccepting = [\n\tDOMAIN,\n\tNUM,\n\tPLUS,\n\tPOUND,\n\tQUERY,\n\tUNDERSCORE,\n\tSYM,\n\tAMPERSAND,\n\tTLD\n];\n\n// Some of the tokens in `localpartAccepting` are already accounted for here and\n// will not be overwritten (don't worry)\nS_DOMAIN\n.on(localpartAccepting, S_LOCALPART)\n.on(AT, S_LOCALPART_AT);\nS_TLD\n.on(localpartAccepting, S_LOCALPART)\n.on(AT, S_LOCALPART_AT);\nS_DOMAIN_DOT.on(localpartAccepting, S_LOCALPART);\n\n// Okay we're on a localpart. Now what?\n// TODO: IP addresses and what if the email starts with numbers?\nS_LOCALPART\n.on(localpartAccepting, S_LOCALPART)\n.on(AT, S_LOCALPART_AT) // close to an email address now\n.on(DOT, S_LOCALPART_DOT);\nS_LOCALPART_DOT.on(localpartAccepting, S_LOCALPART);\nS_LOCALPART_AT\n.on(TLD, S_EMAIL_DOMAIN)\n.on(DOMAIN, S_EMAIL_DOMAIN)\n.on(LOCALHOST, S_EMAIL);\n// States following `@` defined above\n\nlet run = function (tokens) {\n\tlet len = tokens.length;\n\tlet cursor = 0;\n\tlet multis = [];\n\tlet textTokens = [];\n\n\twhile (cursor < len) {\n\t\tlet state = S_START;\n\t\tlet secondState = null;\n\t\tlet nextState = null;\n\t\tlet multiLength = 0;\n\t\tlet latestAccepting = null;\n\t\tlet sinceAccepts = -1;\n\n\t\twhile (cursor < len && !(secondState = state.next(tokens[cursor]))) {\n\t\t\t// Starting tokens with nowhere to jump to.\n\t\t\t// Consider these to be just plain text\n\t\t\ttextTokens.push(tokens[cursor++]);\n\t\t}\n\n\t\twhile (cursor < len && (\n\t\t\tnextState = secondState || state.next(tokens[cursor]))\n\t\t) {\n\n\t\t\t// Get the next state\n\t\t\tsecondState = null;\n\t\t\tstate = nextState;\n\n\t\t\t// Keep track of the latest accepting state\n\t\t\tif (state.accepts()) {\n\t\t\t\tsinceAccepts = 0;\n\t\t\t\tlatestAccepting = state;\n\t\t\t} else if (sinceAccepts >= 0) {\n\t\t\t\tsinceAccepts++;\n\t\t\t}\n\n\t\t\tcursor++;\n\t\t\tmultiLength++;\n\t\t}\n\n\t\tif (sinceAccepts < 0) {\n\n\t\t\t// No accepting state was found, part of a regular text token\n\t\t\t// Add all the tokens we looked at to the text tokens array\n\t\t\tfor (let i = cursor - multiLength; i < cursor; i++) {\n\t\t\t\ttextTokens.push(tokens[i]);\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Accepting state!\n\n\t\t\t// First close off the textTokens (if available)\n\t\t\tif (textTokens.length > 0) {\n\t\t\t\tmultis.push(new TEXT(textTokens));\n\t\t\t\ttextTokens = [];\n\t\t\t}\n\n\t\t\t// Roll back to the latest accepting state\n\t\t\tcursor -= sinceAccepts;\n\t\t\tmultiLength -= sinceAccepts;\n\n\t\t\t// Create a new multitoken\n\t\t\tlet MULTI = latestAccepting.emit();\n\t\t\tmultis.push(new MULTI(tokens.slice(cursor - multiLength, cursor)));\n\t\t}\n\t}\n\n\t// Finally close off the textTokens (if available)\n\tif (textTokens.length > 0) {\n\t\tmultis.push(new TEXT(textTokens));\n\t}\n\n\treturn multis;\n};\n\nexport {\n\tState,\n\tMULTI_TOKENS as TOKENS,\n\trun,\n\tS_START as start\n};\n","/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n\n\t@module linkify\n\t@submodule scanner\n\t@main scanner\n*/\n\nimport {CharacterState as State, stateify} from './state';\nimport * as TOKENS from './tokens/text';\nimport topLevelDomainNames  from '../tlds';\nimport {\n\tDOMAIN,\n\tLOCALHOST,\n\tNUM,\n\tPROTOCOL,\n\tMAILTO,\n\tTLD,\n\tWS,\n\tAT,\n\tDOT,\n\tPLUS,\n\tPOUND,\n\tQUERY,\n\tSLASH,\n\tUNDERSCORE,\n\tCOLON,\n\tOPENBRACE,\n\tOPENBRACKET,\n\tOPENANGLEBRACKET,\n\tOPENPAREN,\n\tCLOSEBRACE,\n\tCLOSEBRACKET,\n\tCLOSEANGLEBRACKET,\n\tCLOSEPAREN,\n\tAMPERSAND,\n\tPUNCTUATION,\n\tNL,\n\tSYM\n} from './tokens/text';\n\nconst NUMBERS = '0123456789'.split('');\nconst ALPHANUM = '0123456789abcdefghijklmnopqrstuvwxyzабвгдеёжзийклмнопрстуфхцчшщъыьэюя'.split('');\nconst WHITESPACE = [' ', '\\f', '\\r', '\\t', '\\v', '\\u00a0', '\\u1680', '\\u180e']; // excluding line breaks\n\nlet domainStates = []; // states that jump to DOMAIN on /[a-z0-9]/\nlet makeState = (tokenClass) => new State(tokenClass);\n\n// Frequently used states\nconst S_START\t\t\t= makeState();\nconst S_NUM\t\t\t\t= makeState(NUM);\nconst S_DOMAIN\t\t\t= makeState(DOMAIN);\nconst S_DOMAIN_HYPHEN\t= makeState(); // domain followed by 1 or more hyphen characters\nconst S_WS\t\t\t\t= makeState(WS);\n\n// States for special URL symbols\nS_START\n.on('@', makeState(AT))\n.on('.', makeState(DOT))\n.on('+', makeState(PLUS))\n.on('#', makeState(POUND))\n.on('?', makeState(QUERY))\n.on('/', makeState(SLASH))\n.on('_', makeState(UNDERSCORE))\n.on(':', makeState(COLON))\n.on('{', makeState(OPENBRACE))\n.on('[', makeState(OPENBRACKET))\n.on('<', makeState(OPENANGLEBRACKET))\n.on('(', makeState(OPENPAREN))\n.on('}', makeState(CLOSEBRACE))\n.on(']', makeState(CLOSEBRACKET))\n.on('>', makeState(CLOSEANGLEBRACKET))\n.on(')', makeState(CLOSEPAREN))\n.on('&', makeState(AMPERSAND))\n.on([',', ';', '!', '\"', '\\'', '`', '-'], makeState(PUNCTUATION));\n\n// Whitespace jumps\n// Tokens of only non-newline whitespace are arbitrarily long\nS_START\n.on('\\n', makeState(NL))\n.on(WHITESPACE, S_WS);\n\n// If any whitespace except newline, more whitespace!\nS_WS.on(WHITESPACE, S_WS);\n\n// Generates states for top-level domains\n// Note that this is most accurate when topLevelDomainNames are in alphabetical order\nfor (let i = 0; i < topLevelDomainNames.length; i++) {\n\tlet newStates = stateify(topLevelDomainNames[i], S_START, TLD, DOMAIN);\n\tdomainStates.push.apply(domainStates, newStates);\n}\n\n// Collect the states generated by different protocls\nlet partialProtocolFileStates = stateify('file', S_START, DOMAIN, DOMAIN);\nlet partialProtocolFtpStates = stateify('ftp', S_START, DOMAIN, DOMAIN);\nlet partialProtocolHttpStates = stateify('http', S_START, DOMAIN, DOMAIN);\nlet partialProtocolMailtoStates = stateify('mailto', S_START, DOMAIN, DOMAIN);\n\n// Add the states to the array of DOMAINeric states\ndomainStates.push.apply(domainStates, partialProtocolFileStates);\ndomainStates.push.apply(domainStates, partialProtocolFtpStates);\ndomainStates.push.apply(domainStates, partialProtocolHttpStates);\n\n// Protocol states\nlet S_PROTOCOL_FILE = partialProtocolFileStates.pop();\nlet S_PROTOCOL_FTP = partialProtocolFtpStates.pop();\nlet S_PROTOCOL_HTTP = partialProtocolHttpStates.pop();\nlet S_MAILTO = partialProtocolMailtoStates.pop();\nlet S_PROTOCOL_SECURE = makeState(DOMAIN);\nlet S_FULL_PROTOCOL = makeState(PROTOCOL); // Full protocol ends with COLON\nlet S_FULL_MAILTO = makeState(MAILTO); // Mailto ends with COLON\n\n// Secure protocols (end with 's')\nS_PROTOCOL_FTP\n.on('s', S_PROTOCOL_SECURE)\n.on(':', S_FULL_PROTOCOL);\n\nS_PROTOCOL_HTTP\n.on('s', S_PROTOCOL_SECURE)\n.on(':', S_FULL_PROTOCOL);\n\ndomainStates.push(S_PROTOCOL_SECURE);\n\n// Become protocol tokens after a COLON\nS_PROTOCOL_FILE.on(':', S_FULL_PROTOCOL);\nS_PROTOCOL_SECURE.on(':', S_FULL_PROTOCOL);\nS_MAILTO.on(':', S_FULL_MAILTO);\n\n// Localhost\nlet partialLocalhostStates = stateify('localhost', S_START, LOCALHOST, DOMAIN);\ndomainStates.push.apply(domainStates, partialLocalhostStates);\n\n// Everything else\n// DOMAINs make more DOMAINs\n// Number and character transitions\nS_START.on(NUMBERS, S_NUM);\nS_NUM\n.on('-', S_DOMAIN_HYPHEN)\n.on(NUMBERS, S_NUM)\n.on(ALPHANUM, S_DOMAIN); // number becomes DOMAIN\n\nS_DOMAIN\n.on('-', S_DOMAIN_HYPHEN)\n.on(ALPHANUM, S_DOMAIN);\n\n// All the generated states should have a jump to DOMAIN\nfor (let i = 0; i < domainStates.length; i++) {\n\tdomainStates[i]\n\t.on('-', S_DOMAIN_HYPHEN)\n\t.on(ALPHANUM, S_DOMAIN);\n}\n\nS_DOMAIN_HYPHEN\n.on('-', S_DOMAIN_HYPHEN)\n.on(NUMBERS, S_DOMAIN)\n.on(ALPHANUM, S_DOMAIN);\n\n// Set default transition\nS_START.defaultTransition = makeState(SYM);\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {String} str Input string to scan\n\t@return {Array} Array of TOKEN instances\n*/\nlet run = function (str) {\n\n\t// The state machine only looks at lowercase strings.\n\t// This selective `toLowerCase` is used because lowercasing the entire\n\t// string causes the length and character position to vary in some in some\n\t// non-English strings. This happens only on V8-based runtimes.\n\tlet lowerStr = str.replace(/[A-ZА-ЯЁ]/g, (c) => c.toLowerCase());\n\tlet len = str.length;\n\tlet tokens = []; // return value\n\n\tvar cursor = 0;\n\n\t// Tokenize the string\n\twhile (cursor < len) {\n\t\tlet state = S_START;\n\t\tlet secondState = null;\n\t\tlet nextState = null;\n\t\tlet tokenLength = 0;\n\t\tlet latestAccepting = null;\n\t\tlet sinceAccepts = -1;\n\n\t\twhile (cursor < len && (nextState = state.next(lowerStr[cursor]))) {\n\t\t\tsecondState = null;\n\t\t\tstate = nextState;\n\n\t\t\t// Keep track of the latest accepting state\n\t\t\tif (state.accepts()) {\n\t\t\t\tsinceAccepts = 0;\n\t\t\t\tlatestAccepting = state;\n\t\t\t} else if (sinceAccepts >= 0) {\n\t\t\t\tsinceAccepts++;\n\t\t\t}\n\n\t\t\ttokenLength++;\n\t\t\tcursor++;\n\t\t}\n\n\t\tif (sinceAccepts < 0) { continue; } // Should never happen\n\n\t\t// Roll back to the latest accepting state\n\t\tcursor -= sinceAccepts;\n\t\ttokenLength -= sinceAccepts;\n\n\t\t// Get the class for the new token\n\t\tlet TOKEN = latestAccepting.emit(); // Current token class\n\n\t\t// No more jumps, just make a new token\n\t\ttokens.push(new TOKEN(str.substr(cursor - tokenLength, tokenLength)));\n\t}\n\n\treturn tokens;\n};\n\nlet start = S_START;\nexport {State, TOKENS, run, start};\n","import {inherits} from '../utils/class';\n\n\nfunction createStateClass() {\n\treturn function (tClass) {\n\t\tthis.j = [];\n\t\tthis.T = tClass || null;\n\t};\n}\n\n/**\n\tA simple state machine that can emit token classes\n\n\tThe `j` property in this class refers to state jumps. It's a\n\tmultidimensional array where for each element:\n\n\t* index [0] is a symbol or class of symbols to transition to.\n\t* index [1] is a State instance which matches\n\n\tThe type of symbol will depend on the target implementation for this class.\n\tIn Linkify, we have a two-stage scanner. Each stage uses this state machine\n\tbut with a slighly different (polymorphic) implementation.\n\n\tThe `T` property refers to the token class.\n\n\tTODO: Can the `on` and `next` methods be combined?\n\n\t@class BaseState\n*/\nconst BaseState = createStateClass();\nBaseState.prototype = {\n\tdefaultTransition: false,\n\n\t/**\n\t\t@method constructor\n\t\t@param {Class} tClass Pass in the kind of token to emit if there are\n\t\t\tno jumps after this state and the state is accepting.\n\t*/\n\n\t/**\n\t\tOn the given symbol(s), this machine should go to the given state\n\n\t\t@method on\n\t\t@param {Array|Mixed} symbol\n\t\t@param {BaseState} state Note that the type of this state should be the\n\t\t\tsame as the current instance (i.e., don't pass in a different\n\t\t\tsubclass)\n\t*/\n\ton(symbol, state) {\n\t\tif (symbol instanceof Array) {\n\t\t\tfor (let i = 0; i < symbol.length; i++) {\n\t\t\t\tthis.j.push([symbol[i], state]);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tthis.j.push([symbol, state]);\n\t\treturn this;\n\t},\n\n\t/**\n\t\tGiven the next item, returns next state for that item\n\t\t@method next\n\t\t@param {Mixed} item Should be an instance of the symbols handled by\n\t\t\tthis particular machine.\n\t\t@return {State} state Returns false if no jumps are available\n\t*/\n\tnext(item) {\n\t\tfor (let i = 0; i < this.j.length; i++) {\n\t\t\tlet jump = this.j[i];\n\t\t\tlet symbol = jump[0]; // Next item to check for\n\t\t\tlet state = jump[1]; // State to jump to if items match\n\n\t\t\t// compare item with symbol\n\t\t\tif (this.test(item, symbol)) { return state; }\n\t\t}\n\n\t\t// Nowhere left to jump!\n\t\treturn this.defaultTransition;\n\t},\n\n\t/**\n\t\tDoes this state accept?\n\t\t`true` only of `this.T` exists\n\n\t\t@method accepts\n\t\t@return {Boolean}\n\t*/\n\taccepts() {\n\t\treturn !!this.T;\n\t},\n\n\t/**\n\t\tDetermine whether a given item \"symbolizes\" the symbol, where symbol is\n\t\ta class of items handled by this state machine.\n\n\t\tThis method should be overriden in extended classes.\n\n\t\t@method test\n\t\t@param {Mixed} item Does this item match the given symbol?\n\t\t@param {Mixed} symbol\n\t\t@return {Boolean}\n\t*/\n\ttest(item, symbol) {\n\t\treturn item === symbol;\n\t},\n\n\t/**\n\t\tEmit the token for this State (just return it in this case)\n\t\tIf this emits a token, this instance is an accepting state\n\t\t@method emit\n\t\t@return {Class} T\n\t*/\n\temit() {\n\t\treturn this.T;\n\t}\n};\n\n/**\n\tState machine for string-based input\n\n\t@class CharacterState\n\t@extends BaseState\n*/\nconst CharacterState = inherits(BaseState, createStateClass(), {\n\t/**\n\t\tDoes the given character match the given character or regular\n\t\texpression?\n\n\t\t@method test\n\t\t@param {String} char\n\t\t@param {String|RegExp} charOrRegExp\n\t\t@return {Boolean}\n\t*/\n\ttest(character, charOrRegExp) {\n\t\treturn character === charOrRegExp || (\n\t\t\tcharOrRegExp instanceof RegExp && charOrRegExp.test(character)\n\t\t);\n\t}\n});\n\n\n/**\n\tState machine for input in the form of TextTokens\n\n\t@class TokenState\n\t@extends BaseState\n*/\nconst TokenState = inherits(BaseState, createStateClass(), {\n\n\t/**\n\t * Similar to `on`, but returns the state the results in the transition from\n\t * the given item\n\t * @method jump\n\t * @param {Mixed} item\n\t * @param {Token} [token]\n\t * @return state\n\t */\n\tjump(token, tClass = null) {\n\t\tvar state = this.next(new token('')); // dummy temp token\n\t\tif (state === this.defaultTransition) {\n\t\t\t// Make a new state!\n\t\t\tstate = new this.constructor(tClass);\n\t\t\tthis.on(token, state);\n\t\t} else if (tClass) {\n\t\t\tstate.T = tClass;\n\t\t}\n\t\treturn state;\n\t},\n\n\t/**\n\t\tIs the given token an instance of the given token class?\n\n\t\t@method test\n\t\t@param {TextToken} token\n\t\t@param {Class} tokenClass\n\t\t@return {Boolean}\n\t*/\n\ttest(token, tokenClass) {\n\t\treturn token instanceof tokenClass;\n\t}\n});\n\n/**\n\tGiven a non-empty target string, generates states (if required) for each\n\tconsecutive substring of characters in str starting from the beginning of\n\tthe string. The final state will have a special value, as specified in\n\toptions. All other \"in between\" substrings will have a default end state.\n\n\tThis turns the state machine into a Trie-like data structure (rather than a\n\tintelligently-designed DFA).\n\n\tNote that I haven't really tried these with any strings other than\n\tDOMAIN.\n\n\t@param {String} str\n\t@param {CharacterState} start State to jump from the first character\n\t@param {Class} endToken Token class to emit when the given string has been\n\t\tmatched and no more jumps exist.\n\t@param {Class} defaultToken \"Filler token\", or which token type to emit when\n\t\twe don't have a full match\n\t@return {Array} list of newly-created states\n*/\nfunction stateify(str, start, endToken, defaultToken) {\n\tlet i = 0,\n\t\tlen = str.length,\n\t\tstate = start,\n\t\tnewStates = [],\n\t\tnextState;\n\n\t// Find the next state without a jump to the next character\n\twhile (i < len && (nextState = state.next(str[i]))) {\n\t\tstate = nextState;\n\t\ti++;\n\t}\n\n\tif (i >= len) { return []; } // no new tokens were added\n\n\twhile (i < len - 1) {\n\t\tnextState = new CharacterState(defaultToken);\n\t\tnewStates.push(nextState);\n\t\tstate.on(str[i], nextState);\n\t\tstate = nextState;\n\t\ti++;\n\t}\n\n\tnextState = new CharacterState(endToken);\n\tnewStates.push(nextState);\n\tstate.on(str[len - 1], nextState);\n\n\treturn newStates;\n}\n\nexport {CharacterState, TokenState, stateify};\n","function createTokenClass() {\n\treturn function (value) {\n\t\tif (value) {\n\t\t\tthis.v = value;\n\t\t}\n\t};\n}\n\n\nexport {createTokenClass};\n","import {createTokenClass} from './create-token-class';\nimport {inherits} from '../../utils/class';\nimport {DOMAIN, PROTOCOL, TLD, SLASH, MAILTO} from './text';\n\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n// Is the given token a valid domain token?\n// Should nums be included here?\nfunction isDomainToken(token) {\n\treturn token instanceof DOMAIN || token instanceof TLD;\n}\n\n/**\n\tAbstract class used for manufacturing tokens of text tokens. That is rather\n\tthan the value for a token being a small string of text, it's value an array\n\tof text tokens.\n\n\tUsed for grouping together URLs, emails, hashtags, and other potential\n\tcreations.\n\n\t@class MultiToken\n\t@abstract\n*/\nconst MultiToken = createTokenClass();\n\nMultiToken.prototype = {\n\t/**\n\t\tString representing the type for this token\n\t\t@property type\n\t\t@default 'TOKEN'\n\t*/\n\ttype: 'token',\n\n\t/**\n\t\tIs this multitoken a link?\n\t\t@property isLink\n\t\t@default false\n\t*/\n\tisLink: false,\n\n\t/**\n\t\tReturn the string this token represents.\n\t\t@method toString\n\t\t@return {String}\n\t*/\n\ttoString() {\n\t\tlet result = [];\n\t\tfor (let i = 0; i < this.v.length; i++) {\n\t\t\tresult.push(this.v[i].toString());\n\t\t}\n\t\treturn result.join('');\n\t},\n\n\t/**\n\t\tWhat should the value for this token be in the `href` HTML attribute?\n\t\tReturns the `.toString` value by default.\n\n\t\t@method toHref\n\t\t@return {String}\n\t*/\n\ttoHref() {\n\t\treturn this.toString();\n\t},\n\n\t/**\n\t\tReturns a hash of relevant values for this token, which includes keys\n\t\t* type - Kind of token ('url', 'email', etc.)\n\t\t* value - Original text\n\t\t* href - The value that should be added to the anchor tag's href\n\t\t\tattribute\n\n\t\t@method toObject\n\t\t@param {String} [protocol] `'http'` by default\n\t\t@return {Object}\n\t*/\n\ttoObject(protocol = 'http') {\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\tvalue: this.toString(),\n\t\t\thref: this.toHref(protocol)\n\t\t};\n\t}\n};\n\n/**\n\tRepresents an arbitrarily mailto email address with the prefix included\n\t@class MAILTO\n\t@extends MultiToken\n*/\nconst MAILTOEMAIL = inherits(MultiToken, createTokenClass(), {\n\ttype: 'email',\n\tisLink: true\n});\n\n/**\n\tRepresents a list of tokens making up a valid email address\n\t@class EMAIL\n\t@extends MultiToken\n*/\nconst EMAIL = inherits(MultiToken, createTokenClass(), {\n\ttype: 'email',\n\tisLink: true,\n\ttoHref() {\n\t\tlet tokens = this.v;\n\t\treturn 'mailto:' + this.toString();\n\t}\n});\n\n/**\n\tRepresents some plain text\n\t@class TEXT\n\t@extends MultiToken\n*/\nconst TEXT = inherits(MultiToken, createTokenClass(), {type: 'text'});\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class NL\n\t@extends MultiToken\n*/\nconst NL = inherits(MultiToken, createTokenClass(), {type: 'nl'});\n\n/**\n\tRepresents a list of tokens making up a valid URL\n\t@class URL\n\t@extends MultiToken\n*/\nconst URL = inherits(MultiToken, createTokenClass(), {\n\ttype: 'url',\n\tisLink: true,\n\n\t/**\n\t\tLowercases relevant parts of the domain and adds the protocol if\n\t\trequired. Note that this will not escape unsafe HTML characters in the\n\t\tURL.\n\n\t\t@method href\n\t\t@param {String} protocol\n\t\t@return {String}\n\t*/\n\ttoHref(protocol = 'http') {\n\t\tlet hasProtocol = false;\n\t\tlet hasSlashSlash = false;\n\t\tlet tokens = this.v;\n\t\tlet result = [];\n\t\tlet i = 0;\n\n\t\t// Make the first part of the domain lowercase\n\t\t// Lowercase protocol\n\t\twhile (tokens[i] instanceof PROTOCOL) {\n\t\t\thasProtocol = true;\n\t\t\tresult.push(tokens[i].toString().toLowerCase());\n\t\t\ti++;\n\t\t}\n\n\t\t// Skip slash-slash\n\t\twhile (tokens[i] instanceof SLASH) {\n\t\t\thasSlashSlash = true;\n\t\t\tresult.push(tokens[i].toString());\n\t\t\ti++;\n\t\t}\n\n\t\t// Lowercase all other characters in the domain\n\t\twhile (isDomainToken(tokens[i])) {\n\t\t\tresult.push(tokens[i].toString().toLowerCase());\n\t\t\ti++;\n\t\t}\n\n\t\t// Leave all other characters as they were written\n\t\tfor (; i < tokens.length; i++) {\n\t\t\tresult.push(tokens[i].toString());\n\t\t}\n\n\t\tresult = result.join('');\n\n\t\tif (!(hasProtocol || hasSlashSlash)) {\n\t\t\tresult = `${protocol}://${result}`;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\thasProtocol() {\n\t\treturn this.v[0] instanceof PROTOCOL;\n\t}\n});\n\nexport {\n\tMultiToken as Base,\n\tMAILTOEMAIL,\n\tEMAIL,\n\tNL,\n\tTEXT,\n\tURL\n};\n","import {createTokenClass} from './create-token-class';\nimport {inherits} from '../../utils/class';\n\n\n/******************************************************************************\n\tText Tokens\n\tTokens composed of strings\n******************************************************************************/\n\n/**\n\tAbstract class used for manufacturing text tokens.\n\tPass in the value this token represents\n\n\t@class TextToken\n\t@abstract\n*/\nconst TextToken = createTokenClass();\nTextToken.prototype = {\n\ttoString() {\n\t\treturn this.v + '';\n\t}\n};\n\n\nfunction inheritsToken(value) {\n\tvar props = value ? {v: value} : {};\n\treturn inherits(TextToken, createTokenClass(), props);\n}\n\n/**\n\tA valid domain token\n\t@class DOMAIN\n\t@extends TextToken\n*/\nconst DOMAIN = inheritsToken();\n\n/**\n\t@class AT\n\t@extends TextToken\n*/\nconst AT = inheritsToken('@');\n\n/**\n\tRepresents a single colon `:` character\n\n\t@class COLON\n\t@extends TextToken\n*/\nconst COLON = inheritsToken(':');\n\n/**\n\t@class DOT\n\t@extends TextToken\n*/\nconst DOT = inheritsToken('.');\n\n/**\n\tA character class that can surround the URL, but which the URL cannot begin\n\tor end with. Does not include certain English punctuation like parentheses.\n\n\t@class PUNCTUATION\n\t@extends TextToken\n*/\nconst PUNCTUATION = inheritsToken();\n\n/**\n\tThe word localhost (by itself)\n\t@class LOCALHOST\n\t@extends TextToken\n*/\nconst LOCALHOST = inheritsToken();\n\n/**\n\tNewline token\n\t@class NL\n\t@extends TextToken\n*/\nconst NL = inheritsToken('\\n');\n\n/**\n\t@class NUM\n\t@extends TextToken\n*/\nconst NUM = inheritsToken();\n\n/**\n\t@class PLUS\n\t@extends TextToken\n*/\nconst PLUS = inheritsToken('+');\n\n/**\n\t@class POUND\n\t@extends TextToken\n*/\nconst POUND = inheritsToken('#');\n\n/**\n\tRepresents a web URL protocol. Supported types include\n\n\t* `http:`\n\t* `https:`\n\t* `ftp:`\n\t* `ftps:`\n\n\t@class PROTOCOL\n\t@extends TextToken\n*/\nconst PROTOCOL = inheritsToken();\n\n/**\n\tRepresents the start of the email URI protocol\n\n\t@class MAILTO\n\t@extends TextToken\n*/\nconst MAILTO = inheritsToken('mailto:');\n\n/**\n\t@class QUERY\n\t@extends TextToken\n*/\nconst QUERY = inheritsToken('?');\n\n/**\n\t@class SLASH\n\t@extends TextToken\n*/\nconst SLASH = inheritsToken('/');\n\n/**\n\t@class UNDERSCORE\n\t@extends TextToken\n*/\nconst UNDERSCORE = inheritsToken('_');\n\n/**\n\tOne ore more non-whitespace symbol.\n\t@class SYM\n\t@extends TextToken\n*/\nconst SYM = inheritsToken();\n\n/**\n\t@class TLD\n\t@extends TextToken\n*/\nconst TLD = inheritsToken();\n\n/**\n\tRepresents a string of consecutive whitespace characters\n\n\t@class WS\n\t@extends TextToken\n*/\nconst WS = inheritsToken();\n\n/**\n\tOpening/closing bracket classes\n*/\n\nconst OPENBRACE = inheritsToken('{');\nconst OPENBRACKET = inheritsToken('[');\nconst OPENANGLEBRACKET = inheritsToken('<');\nconst OPENPAREN = inheritsToken('(');\nconst CLOSEBRACE = inheritsToken('}');\nconst CLOSEBRACKET = inheritsToken(']');\nconst CLOSEANGLEBRACKET = inheritsToken('>');\nconst CLOSEPAREN = inheritsToken(')');\n\nconst AMPERSAND = inheritsToken('&');\n\nexport {\n\tTextToken as Base,\n\tDOMAIN,\n\tAT,\n\tCOLON,\n\tDOT,\n\tPUNCTUATION,\n\tLOCALHOST,\n\tNL,\n\tNUM,\n\tPLUS,\n\tPOUND,\n\tQUERY,\n\tPROTOCOL,\n\tMAILTO,\n\tSLASH,\n\tUNDERSCORE,\n\tSYM,\n\tTLD,\n\tWS,\n\tOPENBRACE,\n\tOPENBRACKET,\n\tOPENANGLEBRACKET,\n\tOPENPAREN,\n\tCLOSEBRACE,\n\tCLOSEBRACKET,\n\tCLOSEANGLEBRACKET,\n\tCLOSEPAREN,\n\tAMPERSAND\n};\n","module.exports=[\n  \"aaa\",\n  \"aarp\",\n  \"abb\",\n  \"abbott\",\n  \"abogado\",\n  \"ac\",\n  \"academy\",\n  \"accenture\",\n  \"accountant\",\n  \"accountants\",\n  \"aco\",\n  \"active\",\n  \"actor\",\n  \"ad\",\n  \"adac\",\n  \"ads\",\n  \"adult\",\n  \"ae\",\n  \"aeg\",\n  \"aero\",\n  \"af\",\n  \"afl\",\n  \"ag\",\n  \"agency\",\n  \"ai\",\n  \"aig\",\n  \"airforce\",\n  \"airtel\",\n  \"al\",\n  \"alibaba\",\n  \"alipay\",\n  \"allfinanz\",\n  \"alsace\",\n  \"am\",\n  \"amica\",\n  \"amsterdam\",\n  \"an\",\n  \"analytics\",\n  \"android\",\n  \"ao\",\n  \"apartments\",\n  \"app\",\n  \"apple\",\n  \"aq\",\n  \"aquarelle\",\n  \"ar\",\n  \"aramco\",\n  \"archi\",\n  \"army\",\n  \"arpa\",\n  \"arte\",\n  \"as\",\n  \"asia\",\n  \"associates\",\n  \"at\",\n  \"attorney\",\n  \"au\",\n  \"auction\",\n  \"audi\",\n  \"audio\",\n  \"author\",\n  \"auto\",\n  \"autos\",\n  \"avianca\",\n  \"aw\",\n  \"ax\",\n  \"axa\",\n  \"az\",\n  \"azure\",\n  \"ba\",\n  \"baidu\",\n  \"band\",\n  \"bank\",\n  \"bar\",\n  \"barcelona\",\n  \"barclaycard\",\n  \"barclays\",\n  \"bargains\",\n  \"bauhaus\",\n  \"bayern\",\n  \"bb\",\n  \"bbc\",\n  \"bbva\",\n  \"bcg\",\n  \"bcn\",\n  \"bd\",\n  \"be\",\n  \"beats\",\n  \"beer\",\n  \"bentley\",\n  \"berlin\",\n  \"best\",\n  \"bet\",\n  \"bf\",\n  \"bg\",\n  \"bh\",\n  \"bharti\",\n  \"bi\",\n  \"bible\",\n  \"bid\",\n  \"bike\",\n  \"bing\",\n  \"bingo\",\n  \"bio\",\n  \"biz\",\n  \"bj\",\n  \"black\",\n  \"blackfriday\",\n  \"bloomberg\",\n  \"blue\",\n  \"bm\",\n  \"bms\",\n  \"bmw\",\n  \"bn\",\n  \"bnl\",\n  \"bnpparibas\",\n  \"bo\",\n  \"boats\",\n  \"boehringer\",\n  \"bom\",\n  \"bond\",\n  \"boo\",\n  \"book\",\n  \"boots\",\n  \"bosch\",\n  \"bostik\",\n  \"bot\",\n  \"boutique\",\n  \"br\",\n  \"bradesco\",\n  \"bridgestone\",\n  \"broadway\",\n  \"broker\",\n  \"brother\",\n  \"brussels\",\n  \"bs\",\n  \"bt\",\n  \"budapest\",\n  \"bugatti\",\n  \"build\",\n  \"builders\",\n  \"business\",\n  \"buy\",\n  \"buzz\",\n  \"bv\",\n  \"bw\",\n  \"by\",\n  \"bz\",\n  \"bzh\",\n  \"ca\",\n  \"cab\",\n  \"cafe\",\n  \"cal\",\n  \"call\",\n  \"camera\",\n  \"camp\",\n  \"cancerresearch\",\n  \"canon\",\n  \"capetown\",\n  \"capital\",\n  \"car\",\n  \"caravan\",\n  \"cards\",\n  \"care\",\n  \"career\",\n  \"careers\",\n  \"cars\",\n  \"cartier\",\n  \"casa\",\n  \"cash\",\n  \"casino\",\n  \"cat\",\n  \"catering\",\n  \"cba\",\n  \"cbn\",\n  \"cc\",\n  \"cd\",\n  \"ceb\",\n  \"center\",\n  \"ceo\",\n  \"cern\",\n  \"cf\",\n  \"cfa\",\n  \"cfd\",\n  \"cg\",\n  \"ch\",\n  \"chanel\",\n  \"channel\",\n  \"chase\",\n  \"chat\",\n  \"cheap\",\n  \"chloe\",\n  \"christmas\",\n  \"chrome\",\n  \"church\",\n  \"ci\",\n  \"cipriani\",\n  \"circle\",\n  \"cisco\",\n  \"citic\",\n  \"city\",\n  \"cityeats\",\n  \"ck\",\n  \"cl\",\n  \"claims\",\n  \"cleaning\",\n  \"click\",\n  \"clinic\",\n  \"clinique\",\n  \"clothing\",\n  \"cloud\",\n  \"club\",\n  \"clubmed\",\n  \"cm\",\n  \"cn\",\n  \"co\",\n  \"coach\",\n  \"codes\",\n  \"coffee\",\n  \"college\",\n  \"cologne\",\n  \"com\",\n  \"commbank\",\n  \"community\",\n  \"company\",\n  \"compare\",\n  \"computer\",\n  \"comsec\",\n  \"condos\",\n  \"construction\",\n  \"consulting\",\n  \"contact\",\n  \"contractors\",\n  \"cooking\",\n  \"cool\",\n  \"coop\",\n  \"corsica\",\n  \"country\",\n  \"coupon\",\n  \"coupons\",\n  \"courses\",\n  \"cr\",\n  \"credit\",\n  \"creditcard\",\n  \"creditunion\",\n  \"cricket\",\n  \"crown\",\n  \"crs\",\n  \"cruises\",\n  \"csc\",\n  \"cu\",\n  \"cuisinella\",\n  \"cv\",\n  \"cw\",\n  \"cx\",\n  \"cy\",\n  \"cymru\",\n  \"cyou\",\n  \"cz\",\n  \"dabur\",\n  \"dad\",\n  \"dance\",\n  \"date\",\n  \"dating\",\n  \"datsun\",\n  \"day\",\n  \"dclk\",\n  \"de\",\n  \"dealer\",\n  \"deals\",\n  \"degree\",\n  \"delivery\",\n  \"dell\",\n  \"deloitte\",\n  \"delta\",\n  \"democrat\",\n  \"dental\",\n  \"dentist\",\n  \"desi\",\n  \"design\",\n  \"dev\",\n  \"diamonds\",\n  \"diet\",\n  \"digital\",\n  \"direct\",\n  \"directory\",\n  \"discount\",\n  \"dj\",\n  \"dk\",\n  \"dm\",\n  \"dnp\",\n  \"do\",\n  \"docs\",\n  \"dog\",\n  \"doha\",\n  \"domains\",\n  \"download\",\n  \"drive\",\n  \"dubai\",\n  \"durban\",\n  \"dvag\",\n  \"dz\",\n  \"earth\",\n  \"eat\",\n  \"ec\",\n  \"edeka\",\n  \"edu\",\n  \"education\",\n  \"ee\",\n  \"eg\",\n  \"email\",\n  \"emerck\",\n  \"energy\",\n  \"engineer\",\n  \"engineering\",\n  \"enterprises\",\n  \"epson\",\n  \"equipment\",\n  \"er\",\n  \"erni\",\n  \"es\",\n  \"esq\",\n  \"estate\",\n  \"et\",\n  \"eu\",\n  \"eurovision\",\n  \"eus\",\n  \"events\",\n  \"everbank\",\n  \"exchange\",\n  \"expert\",\n  \"exposed\",\n  \"express\",\n  \"fage\",\n  \"fail\",\n  \"fairwinds\",\n  \"faith\",\n  \"family\",\n  \"fan\",\n  \"fans\",\n  \"farm\",\n  \"fashion\",\n  \"fast\",\n  \"feedback\",\n  \"ferrero\",\n  \"fi\",\n  \"film\",\n  \"final\",\n  \"finance\",\n  \"financial\",\n  \"firestone\",\n  \"firmdale\",\n  \"fish\",\n  \"fishing\",\n  \"fit\",\n  \"fitness\",\n  \"fj\",\n  \"fk\",\n  \"flickr\",\n  \"flights\",\n  \"florist\",\n  \"flowers\",\n  \"flsmidth\",\n  \"fly\",\n  \"fm\",\n  \"fo\",\n  \"foo\",\n  \"football\",\n  \"ford\",\n  \"forex\",\n  \"forsale\",\n  \"forum\",\n  \"foundation\",\n  \"fox\",\n  \"fr\",\n  \"fresenius\",\n  \"frl\",\n  \"frogans\",\n  \"frontier\",\n  \"fund\",\n  \"furniture\",\n  \"futbol\",\n  \"fyi\",\n  \"ga\",\n  \"gal\",\n  \"gallery\",\n  \"gallup\",\n  \"game\",\n  \"garden\",\n  \"gb\",\n  \"gbiz\",\n  \"gd\",\n  \"gdn\",\n  \"ge\",\n  \"gea\",\n  \"gent\",\n  \"genting\",\n  \"gf\",\n  \"gg\",\n  \"ggee\",\n  \"gh\",\n  \"gi\",\n  \"gift\",\n  \"gifts\",\n  \"gives\",\n  \"giving\",\n  \"gl\",\n  \"glass\",\n  \"gle\",\n  \"global\",\n  \"globo\",\n  \"gm\",\n  \"gmail\",\n  \"gmbh\",\n  \"gmo\",\n  \"gmx\",\n  \"gn\",\n  \"gold\",\n  \"goldpoint\",\n  \"golf\",\n  \"goo\",\n  \"goog\",\n  \"google\",\n  \"gop\",\n  \"got\",\n  \"gov\",\n  \"gp\",\n  \"gq\",\n  \"gr\",\n  \"grainger\",\n  \"graphics\",\n  \"gratis\",\n  \"green\",\n  \"gripe\",\n  \"group\",\n  \"gs\",\n  \"gt\",\n  \"gu\",\n  \"gucci\",\n  \"guge\",\n  \"guide\",\n  \"guitars\",\n  \"guru\",\n  \"gw\",\n  \"gy\",\n  \"hamburg\",\n  \"hangout\",\n  \"haus\",\n  \"hdfcbank\",\n  \"health\",\n  \"healthcare\",\n  \"help\",\n  \"helsinki\",\n  \"here\",\n  \"hermes\",\n  \"hiphop\",\n  \"hitachi\",\n  \"hiv\",\n  \"hk\",\n  \"hm\",\n  \"hn\",\n  \"hockey\",\n  \"holdings\",\n  \"holiday\",\n  \"homedepot\",\n  \"homes\",\n  \"honda\",\n  \"horse\",\n  \"host\",\n  \"hosting\",\n  \"hoteles\",\n  \"hotmail\",\n  \"house\",\n  \"how\",\n  \"hr\",\n  \"hsbc\",\n  \"ht\",\n  \"hu\",\n  \"hyundai\",\n  \"ibm\",\n  \"icbc\",\n  \"ice\",\n  \"icu\",\n  \"id\",\n  \"ie\",\n  \"ifm\",\n  \"iinet\",\n  \"il\",\n  \"im\",\n  \"immo\",\n  \"immobilien\",\n  \"in\",\n  \"industries\",\n  \"infiniti\",\n  \"info\",\n  \"ing\",\n  \"ink\",\n  \"institute\",\n  \"insurance\",\n  \"insure\",\n  \"int\",\n  \"international\",\n  \"investments\",\n  \"io\",\n  \"ipiranga\",\n  \"iq\",\n  \"ir\",\n  \"irish\",\n  \"is\",\n  \"iselect\",\n  \"ist\",\n  \"istanbul\",\n  \"it\",\n  \"itau\",\n  \"iwc\",\n  \"jaguar\",\n  \"java\",\n  \"jcb\",\n  \"je\",\n  \"jetzt\",\n  \"jewelry\",\n  \"jlc\",\n  \"jll\",\n  \"jm\",\n  \"jmp\",\n  \"jo\",\n  \"jobs\",\n  \"joburg\",\n  \"jot\",\n  \"joy\",\n  \"jp\",\n  \"jpmorgan\",\n  \"jprs\",\n  \"juegos\",\n  \"kaufen\",\n  \"kddi\",\n  \"ke\",\n  \"kerryhotels\",\n  \"kerrylogistics\",\n  \"kerryproperties\",\n  \"kfh\",\n  \"kg\",\n  \"kh\",\n  \"ki\",\n  \"kia\",\n  \"kim\",\n  \"kinder\",\n  \"kitchen\",\n  \"kiwi\",\n  \"km\",\n  \"kn\",\n  \"koeln\",\n  \"komatsu\",\n  \"kp\",\n  \"kpn\",\n  \"kr\",\n  \"krd\",\n  \"kred\",\n  \"kuokgroup\",\n  \"kw\",\n  \"ky\",\n  \"kyoto\",\n  \"kz\",\n  \"la\",\n  \"lacaixa\",\n  \"lamborghini\",\n  \"lamer\",\n  \"lancaster\",\n  \"land\",\n  \"landrover\",\n  \"lanxess\",\n  \"lasalle\",\n  \"lat\",\n  \"latrobe\",\n  \"law\",\n  \"lawyer\",\n  \"lb\",\n  \"lc\",\n  \"lds\",\n  \"lease\",\n  \"leclerc\",\n  \"legal\",\n  \"lexus\",\n  \"lgbt\",\n  \"li\",\n  \"liaison\",\n  \"lidl\",\n  \"life\",\n  \"lifeinsurance\",\n  \"lifestyle\",\n  \"lighting\",\n  \"like\",\n  \"limited\",\n  \"limo\",\n  \"lincoln\",\n  \"linde\",\n  \"link\",\n  \"live\",\n  \"living\",\n  \"lixil\",\n  \"lk\",\n  \"loan\",\n  \"loans\",\n  \"local\",\n  \"locus\",\n  \"lol\",\n  \"london\",\n  \"lotte\",\n  \"lotto\",\n  \"love\",\n  \"lr\",\n  \"ls\",\n  \"lt\",\n  \"ltd\",\n  \"ltda\",\n  \"lu\",\n  \"lupin\",\n  \"luxe\",\n  \"luxury\",\n  \"lv\",\n  \"ly\",\n  \"ma\",\n  \"madrid\",\n  \"maif\",\n  \"maison\",\n  \"makeup\",\n  \"man\",\n  \"management\",\n  \"mango\",\n  \"market\",\n  \"marketing\",\n  \"markets\",\n  \"marriott\",\n  \"mba\",\n  \"mc\",\n  \"md\",\n  \"me\",\n  \"med\",\n  \"media\",\n  \"meet\",\n  \"melbourne\",\n  \"meme\",\n  \"memorial\",\n  \"men\",\n  \"menu\",\n  \"meo\",\n  \"mg\",\n  \"mh\",\n  \"miami\",\n  \"microsoft\",\n  \"mil\",\n  \"mini\",\n  \"mk\",\n  \"ml\",\n  \"mm\",\n  \"mma\",\n  \"mn\",\n  \"mo\",\n  \"mobi\",\n  \"mobily\",\n  \"moda\",\n  \"moe\",\n  \"moi\",\n  \"mom\",\n  \"monash\",\n  \"money\",\n  \"montblanc\",\n  \"mormon\",\n  \"mortgage\",\n  \"moscow\",\n  \"motorcycles\",\n  \"mov\",\n  \"movie\",\n  \"movistar\",\n  \"mp\",\n  \"mq\",\n  \"mr\",\n  \"ms\",\n  \"mt\",\n  \"mtn\",\n  \"mtpc\",\n  \"mtr\",\n  \"mu\",\n  \"museum\",\n  \"mutuelle\",\n  \"mv\",\n  \"mw\",\n  \"mx\",\n  \"my\",\n  \"mz\",\n  \"na\",\n  \"nadex\",\n  \"nagoya\",\n  \"name\",\n  \"natura\",\n  \"navy\",\n  \"nc\",\n  \"ne\",\n  \"nec\",\n  \"net\",\n  \"netbank\",\n  \"network\",\n  \"neustar\",\n  \"new\",\n  \"news\",\n  \"nexus\",\n  \"nf\",\n  \"ng\",\n  \"ngo\",\n  \"nhk\",\n  \"ni\",\n  \"nico\",\n  \"nikon\",\n  \"ninja\",\n  \"nissan\",\n  \"nl\",\n  \"no\",\n  \"nokia\",\n  \"norton\",\n  \"nowruz\",\n  \"np\",\n  \"nr\",\n  \"nra\",\n  \"nrw\",\n  \"ntt\",\n  \"nu\",\n  \"nyc\",\n  \"nz\",\n  \"obi\",\n  \"office\",\n  \"okinawa\",\n  \"om\",\n  \"omega\",\n  \"one\",\n  \"ong\",\n  \"onl\",\n  \"online\",\n  \"ooo\",\n  \"oracle\",\n  \"orange\",\n  \"org\",\n  \"organic\",\n  \"origins\",\n  \"osaka\",\n  \"otsuka\",\n  \"ovh\",\n  \"pa\",\n  \"page\",\n  \"pamperedchef\",\n  \"panerai\",\n  \"paris\",\n  \"pars\",\n  \"partners\",\n  \"parts\",\n  \"party\",\n  \"passagens\",\n  \"pe\",\n  \"pet\",\n  \"pf\",\n  \"pg\",\n  \"ph\",\n  \"pharmacy\",\n  \"philips\",\n  \"photo\",\n  \"photography\",\n  \"photos\",\n  \"physio\",\n  \"piaget\",\n  \"pics\",\n  \"pictet\",\n  \"pictures\",\n  \"pid\",\n  \"pin\",\n  \"ping\",\n  \"pink\",\n  \"pizza\",\n  \"pk\",\n  \"pl\",\n  \"place\",\n  \"play\",\n  \"playstation\",\n  \"plumbing\",\n  \"plus\",\n  \"pm\",\n  \"pn\",\n  \"pohl\",\n  \"poker\",\n  \"porn\",\n  \"post\",\n  \"pr\",\n  \"praxi\",\n  \"press\",\n  \"pro\",\n  \"prod\",\n  \"productions\",\n  \"prof\",\n  \"promo\",\n  \"properties\",\n  \"property\",\n  \"protection\",\n  \"ps\",\n  \"pt\",\n  \"pub\",\n  \"pw\",\n  \"pwc\",\n  \"py\",\n  \"qa\",\n  \"qpon\",\n  \"quebec\",\n  \"quest\",\n  \"racing\",\n  \"re\",\n  \"read\",\n  \"realtor\",\n  \"realty\",\n  \"recipes\",\n  \"red\",\n  \"redstone\",\n  \"redumbrella\",\n  \"rehab\",\n  \"reise\",\n  \"reisen\",\n  \"reit\",\n  \"ren\",\n  \"rent\",\n  \"rentals\",\n  \"repair\",\n  \"report\",\n  \"republican\",\n  \"rest\",\n  \"restaurant\",\n  \"review\",\n  \"reviews\",\n  \"rexroth\",\n  \"rich\",\n  \"ricoh\",\n  \"rio\",\n  \"rip\",\n  \"ro\",\n  \"rocher\",\n  \"rocks\",\n  \"rodeo\",\n  \"room\",\n  \"rs\",\n  \"rsvp\",\n  \"ru\",\n  \"ruhr\",\n  \"run\",\n  \"rw\",\n  \"rwe\",\n  \"ryukyu\",\n  \"sa\",\n  \"saarland\",\n  \"safe\",\n  \"safety\",\n  \"sakura\",\n  \"sale\",\n  \"salon\",\n  \"samsung\",\n  \"sandvik\",\n  \"sandvikcoromant\",\n  \"sanofi\",\n  \"sap\",\n  \"sapo\",\n  \"sarl\",\n  \"sas\",\n  \"saxo\",\n  \"sb\",\n  \"sbs\",\n  \"sc\",\n  \"sca\",\n  \"scb\",\n  \"schaeffler\",\n  \"schmidt\",\n  \"scholarships\",\n  \"school\",\n  \"schule\",\n  \"schwarz\",\n  \"science\",\n  \"scor\",\n  \"scot\",\n  \"sd\",\n  \"se\",\n  \"seat\",\n  \"security\",\n  \"seek\",\n  \"select\",\n  \"sener\",\n  \"services\",\n  \"seven\",\n  \"sew\",\n  \"sex\",\n  \"sexy\",\n  \"sfr\",\n  \"sg\",\n  \"sh\",\n  \"sharp\",\n  \"shell\",\n  \"shia\",\n  \"shiksha\",\n  \"shoes\",\n  \"show\",\n  \"shriram\",\n  \"si\",\n  \"singles\",\n  \"site\",\n  \"sj\",\n  \"sk\",\n  \"ski\",\n  \"skin\",\n  \"sky\",\n  \"skype\",\n  \"sl\",\n  \"sm\",\n  \"smile\",\n  \"sn\",\n  \"sncf\",\n  \"so\",\n  \"soccer\",\n  \"social\",\n  \"softbank\",\n  \"software\",\n  \"sohu\",\n  \"solar\",\n  \"solutions\",\n  \"song\",\n  \"sony\",\n  \"soy\",\n  \"space\",\n  \"spiegel\",\n  \"spot\",\n  \"spreadbetting\",\n  \"sr\",\n  \"srl\",\n  \"st\",\n  \"stada\",\n  \"star\",\n  \"starhub\",\n  \"statefarm\",\n  \"statoil\",\n  \"stc\",\n  \"stcgroup\",\n  \"stockholm\",\n  \"storage\",\n  \"store\",\n  \"studio\",\n  \"study\",\n  \"style\",\n  \"su\",\n  \"sucks\",\n  \"supplies\",\n  \"supply\",\n  \"support\",\n  \"surf\",\n  \"surgery\",\n  \"suzuki\",\n  \"sv\",\n  \"swatch\",\n  \"swiss\",\n  \"sx\",\n  \"sy\",\n  \"sydney\",\n  \"symantec\",\n  \"systems\",\n  \"sz\",\n  \"tab\",\n  \"taipei\",\n  \"taobao\",\n  \"tatamotors\",\n  \"tatar\",\n  \"tattoo\",\n  \"tax\",\n  \"taxi\",\n  \"tc\",\n  \"tci\",\n  \"td\",\n  \"team\",\n  \"tech\",\n  \"technology\",\n  \"tel\",\n  \"telecity\",\n  \"telefonica\",\n  \"temasek\",\n  \"tennis\",\n  \"tf\",\n  \"tg\",\n  \"th\",\n  \"thd\",\n  \"theater\",\n  \"theatre\",\n  \"tickets\",\n  \"tienda\",\n  \"tiffany\",\n  \"tips\",\n  \"tires\",\n  \"tirol\",\n  \"tj\",\n  \"tk\",\n  \"tl\",\n  \"tm\",\n  \"tmall\",\n  \"tn\",\n  \"to\",\n  \"today\",\n  \"tokyo\",\n  \"tools\",\n  \"top\",\n  \"toray\",\n  \"toshiba\",\n  \"total\",\n  \"tours\",\n  \"town\",\n  \"toyota\",\n  \"toys\",\n  \"tp\",\n  \"tr\",\n  \"trade\",\n  \"trading\",\n  \"training\",\n  \"travel\",\n  \"travelers\",\n  \"travelersinsurance\",\n  \"trust\",\n  \"trv\",\n  \"tt\",\n  \"tube\",\n  \"tui\",\n  \"tunes\",\n  \"tushu\",\n  \"tv\",\n  \"tvs\",\n  \"tw\",\n  \"tz\",\n  \"ua\",\n  \"ubs\",\n  \"ug\",\n  \"uk\",\n  \"unicom\",\n  \"university\",\n  \"uno\",\n  \"uol\",\n  \"us\",\n  \"uy\",\n  \"uz\",\n  \"va\",\n  \"vacations\",\n  \"vana\",\n  \"vc\",\n  \"ve\",\n  \"vegas\",\n  \"ventures\",\n  \"verisign\",\n  \"versicherung\",\n  \"vet\",\n  \"vg\",\n  \"vi\",\n  \"viajes\",\n  \"video\",\n  \"viking\",\n  \"villas\",\n  \"vin\",\n  \"vip\",\n  \"virgin\",\n  \"vision\",\n  \"vista\",\n  \"vistaprint\",\n  \"viva\",\n  \"vlaanderen\",\n  \"vn\",\n  \"vodka\",\n  \"volkswagen\",\n  \"vote\",\n  \"voting\",\n  \"voto\",\n  \"voyage\",\n  \"vu\",\n  \"vuelos\",\n  \"wales\",\n  \"walter\",\n  \"wang\",\n  \"wanggou\",\n  \"watch\",\n  \"watches\",\n  \"weather\",\n  \"weatherchannel\",\n  \"webcam\",\n  \"weber\",\n  \"website\",\n  \"wed\",\n  \"wedding\",\n  \"weir\",\n  \"wf\",\n  \"whoswho\",\n  \"wien\",\n  \"wiki\",\n  \"williamhill\",\n  \"win\",\n  \"windows\",\n  \"wine\",\n  \"wme\",\n  \"wolterskluwer\",\n  \"work\",\n  \"works\",\n  \"world\",\n  \"ws\",\n  \"wtc\",\n  \"wtf\",\n  \"xbox\",\n  \"xerox\",\n  \"xin\",\n  \"xperia\",\n  \"xxx\",\n  \"xyz\",\n  \"yachts\",\n  \"yahoo\",\n  \"yamaxun\",\n  \"yandex\",\n  \"ye\",\n  \"yodobashi\",\n  \"yoga\",\n  \"yokohama\",\n  \"youtube\",\n  \"yt\",\n  \"za\",\n  \"zara\",\n  \"zero\",\n  \"zip\",\n  \"zm\",\n  \"zone\",\n  \"zuerich\",\n  \"zw\",\n  \"а.рф\",\n  \"б.рф\",\n  \"в.рф\",\n  \"г.рф\",\n  \"дети\",\n  \"е.рф\",\n  \"ё.рф\",\n  \"ж.рф\",\n  \"з.рф\",\n  \"испытание\",\n  \"католик\",\n  \"ком\",\n  \"л.рф\",\n  \"москва\",\n  \"н.рф\",\n  \"онлайн\",\n  \"орг\",\n  \"п.рф\",\n  \"руc\",\n  \"рф\",\n  \"сайт\",\n  \"т.рф\",\n  \"у.рф\",\n  \"ф.рф\",\n  \"х.рф\",\n  \"ц.рф\",\n  \"ч.рф\",\n  \"ш.рф\",\n  \"щ.рф\",\n  \"ъ.рф\",\n  \"ы.рф\",\n  \"ь.рф\",\n  \"э.рф\",\n  \"ю.рф\",\n  \"я.рф\"\n]\n","export function inherits(parent, child, props={}) {\n\tlet extended = Object.create(parent.prototype);\n\tfor (const p in props) {\n\t\textended[p] = props[p];\n\t}\n\textended.constructor = child;\n\tchild.prototype = extended;\n\treturn child;\n}\n"]}